<p>All types used in the Bot API responses are represented as JSON-objects.</p><p>It is safe to use 32-bit signed integers for storing all <strong>Integer</strong> fields unless otherwise noted.</p><blockquote>
 <p><strong>Optional</strong> fields may be not returned when irrelevant.</p>
</blockquote><h4><a class="anchor" name="user" href="#user"><i class="anchor-icon"></i></a>User</h4><p>This object represents a Telegram user or bot.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>id</td>
   <td>Integer</td>
   <td>Unique identifier for this user or bot. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.</td>
  </tr>
  <tr>
   <td>is_bot</td>
   <td>Boolean</td>
   <td><em>True</em>, if this user is a bot</td>
  </tr>
  <tr>
   <td>first_name</td>
   <td>String</td>
   <td>User's or bot's first name</td>
  </tr>
  <tr>
   <td>last_name</td>
   <td>String</td>
   <td><em>Optional</em>. User's or bot's last name</td>
  </tr>
  <tr>
   <td>username</td>
   <td>String</td>
   <td><em>Optional</em>. User's or bot's username</td>
  </tr>
  <tr>
   <td>language_code</td>
   <td>String</td>
   <td><em>Optional</em>. <a href="https://en.wikipedia.org/wiki/IETF_language_tag">IETF language tag</a> of the user's language</td>
  </tr>
  <tr>
   <td>is_premium</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if this user is a Telegram Premium user</td>
  </tr>
  <tr>
   <td>added_to_attachment_menu</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if this user added the bot to the attachment menu</td>
  </tr>
  <tr>
   <td>can_join_groups</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the bot can be invited to groups. Returned only in <a href="#getme">getMe</a>.</td>
  </tr>
  <tr>
   <td>can_read_all_group_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if <a href="/bots/features#privacy-mode">privacy mode</a> is disabled for the bot. Returned only in <a href="#getme">getMe</a>.</td>
  </tr>
  <tr>
   <td>supports_inline_queries</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the bot supports inline queries. Returned only in <a href="#getme">getMe</a>.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chat" href="#chat"><i class="anchor-icon"></i></a>Chat</h4><p>This object represents a chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>id</td>
   <td>Integer</td>
   <td>Unique identifier for this chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.</td>
  </tr>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of chat, can be either “private”, “group”, “supergroup” or “channel”</td>
  </tr>
  <tr>
   <td>title</td>
   <td>String</td>
   <td><em>Optional</em>. Title, for supergroups, channels and group chats</td>
  </tr>
  <tr>
   <td>username</td>
   <td>String</td>
   <td><em>Optional</em>. Username, for private chats, supergroups and channels if available</td>
  </tr>
  <tr>
   <td>first_name</td>
   <td>String</td>
   <td><em>Optional</em>. First name of the other party in a private chat</td>
  </tr>
  <tr>
   <td>last_name</td>
   <td>String</td>
   <td><em>Optional</em>. Last name of the other party in a private chat</td>
  </tr>
  <tr>
   <td>is_forum</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the supergroup chat is a forum (has <a href="https://telegram.org/blog/topics-in-groups-collectible-usernames#topics-in-groups">topics</a> enabled)</td>
  </tr>
  <tr>
   <td>photo</td>
   <td><a href="#chatphoto">ChatPhoto</a></td>
   <td><em>Optional</em>. Chat photo. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>active_usernames</td>
   <td>Array of String</td>
   <td><em>Optional</em>. If non-empty, the list of all <a href="https://telegram.org/blog/topics-in-groups-collectible-usernames#collectible-usernames">active chat usernames</a>; for private chats, supergroups and channels. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>available_reactions</td>
   <td>Array of <a href="#reactiontype">ReactionType</a></td>
   <td><em>Optional</em>. List of available reactions allowed in the chat. If omitted, then all <a href="#reactiontypeemoji">emoji reactions</a> are allowed. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>accent_color_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. Identifier of the accent color for the chat name and backgrounds of the chat photo, reply header, and link preview. See <a href="#accent-colors">accent colors</a> for more details. Returned only in <a href="#getchat">getChat</a>. Always returned in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>background_custom_emoji_id</td>
   <td>String</td>
   <td><em>Optional</em>. Custom emoji identifier of emoji chosen by the chat for the reply header and link preview background. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>profile_accent_color_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. Identifier of the accent color for the chat's profile background. See <a href="#profile-accent-colors">profile accent colors</a> for more details. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>profile_background_custom_emoji_id</td>
   <td>String</td>
   <td><em>Optional</em>. Custom emoji identifier of the emoji chosen by the chat for its profile background. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>emoji_status_custom_emoji_id</td>
   <td>String</td>
   <td><em>Optional</em>. Custom emoji identifier of the emoji status of the chat or the other party in a private chat. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>emoji_status_expiration_date</td>
   <td>Integer</td>
   <td><em>Optional</em>. Expiration date of the emoji status of the chat or the other party in a private chat, in Unix time, if any. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>bio</td>
   <td>String</td>
   <td><em>Optional</em>. Bio of the other party in a private chat. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>has_private_forwards</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if privacy settings of the other party in the private chat allows to use <code>tg://user?id=&lt;user_id&gt;</code> links only in chats with the user. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>has_restricted_voice_and_video_messages</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the privacy settings of the other party restrict sending voice and video note messages in the private chat. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>join_to_send_messages</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if users need to join the supergroup before they can send messages. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>join_by_request</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if all users directly joining the supergroup need to be approved by supergroup administrators. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>description</td>
   <td>String</td>
   <td><em>Optional</em>. Description, for groups, supergroups and channel chats. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>invite_link</td>
   <td>String</td>
   <td><em>Optional</em>. Primary invite link, for groups, supergroups and channel chats. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>pinned_message</td>
   <td><a href="#message">Message</a></td>
   <td><em>Optional</em>. The most recent pinned message (by sending date). Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>permissions</td>
   <td><a href="#chatpermissions">ChatPermissions</a></td>
   <td><em>Optional</em>. Default chat member permissions, for groups and supergroups. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>slow_mode_delay</td>
   <td>Integer</td>
   <td><em>Optional</em>. For supergroups, the minimum allowed delay between consecutive messages sent by each unprivileged user; in seconds. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>unrestrict_boost_count</td>
   <td>Integer</td>
   <td><em>Optional</em>. For supergroups, the minimum number of boosts that a non-administrator user needs to add in order to ignore slow mode and chat permissions. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>message_auto_delete_time</td>
   <td>Integer</td>
   <td><em>Optional</em>. The time after which all messages sent to the chat will be automatically deleted; in seconds. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>has_aggressive_anti_spam_enabled</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if aggressive anti-spam checks are enabled in the supergroup. The field is only available to chat administrators. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>has_hidden_members</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if non-administrators can only get the list of bots and administrators in the chat. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>has_protected_content</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if messages from the chat can't be forwarded to other chats. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>has_visible_history</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if new chat members will have access to old messages; available only to chat administrators. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>sticker_set_name</td>
   <td>String</td>
   <td><em>Optional</em>. For supergroups, name of group sticker set. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>can_set_sticker_set</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the bot can change the group sticker set. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>custom_emoji_sticker_set_name</td>
   <td>String</td>
   <td><em>Optional</em>. For supergroups, the name of the group's custom emoji sticker set. Custom emoji from this set can be used by all users and bots in the group. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>linked_chat_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. Unique identifier for the linked chat, i.e. the discussion group identifier for a channel and vice versa; for supergroups and channel chats. This identifier may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
  <tr>
   <td>location</td>
   <td><a href="#chatlocation">ChatLocation</a></td>
   <td><em>Optional</em>. For supergroups, the location to which the supergroup is connected. Returned only in <a href="#getchat">getChat</a>.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="message" href="#message"><i class="anchor-icon"></i></a>Message</h4><p>This object represents a message.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>message_id</td>
   <td>Integer</td>
   <td>Unique message identifier inside this chat</td>
  </tr>
  <tr>
   <td>message_thread_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. Unique identifier of a message thread to which the message belongs; for supergroups only</td>
  </tr>
  <tr>
   <td>from</td>
   <td><a href="#user">User</a></td>
   <td><em>Optional</em>. Sender of the message; empty for messages sent to channels. For backward compatibility, the field contains a fake sender user in non-channel chats, if the message was sent on behalf of a chat.</td>
  </tr>
  <tr>
   <td>sender_chat</td>
   <td><a href="#chat">Chat</a></td>
   <td><em>Optional</em>. Sender of the message, sent on behalf of a chat. For example, the channel itself for channel posts, the supergroup itself for messages from anonymous group administrators, the linked channel for messages automatically forwarded to the discussion group. For backward compatibility, the field <em>from</em> contains a fake sender user in non-channel chats, if the message was sent on behalf of a chat.</td>
  </tr>
  <tr>
   <td>sender_boost_count</td>
   <td>Integer</td>
   <td><em>Optional</em>. If the sender of the message boosted the chat, the number of boosts added by the user</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date the message was sent in Unix time. It is always a positive number, representing a valid date.</td>
  </tr>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Chat the message belongs to</td>
  </tr>
  <tr>
   <td>forward_origin</td>
   <td><a href="#messageorigin">MessageOrigin</a></td>
   <td><em>Optional</em>. Information about the original message for forwarded messages</td>
  </tr>
  <tr>
   <td>is_topic_message</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the message is sent to a forum topic</td>
  </tr>
  <tr>
   <td>is_automatic_forward</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the message is a channel post that was automatically forwarded to the connected discussion group</td>
  </tr>
  <tr>
   <td>reply_to_message</td>
   <td><a href="#message">Message</a></td>
   <td><em>Optional</em>. For replies in the same chat and message thread, the original message. Note that the Message object in this field will not contain further <em>reply_to_message</em> fields even if it itself is a reply.</td>
  </tr>
  <tr>
   <td>external_reply</td>
   <td><a href="#externalreplyinfo">ExternalReplyInfo</a></td>
   <td><em>Optional</em>. Information about the message that is being replied to, which may come from another chat or forum topic</td>
  </tr>
  <tr>
   <td>quote</td>
   <td><a href="#textquote">TextQuote</a></td>
   <td><em>Optional</em>. For replies that quote part of the original message, the quoted part of the message</td>
  </tr>
  <tr>
   <td>reply_to_story</td>
   <td><a href="#story">Story</a></td>
   <td><em>Optional</em>. For replies to a story, the original story</td>
  </tr>
  <tr>
   <td>via_bot</td>
   <td><a href="#user">User</a></td>
   <td><em>Optional</em>. Bot through which the message was sent</td>
  </tr>
  <tr>
   <td>edit_date</td>
   <td>Integer</td>
   <td><em>Optional</em>. Date the message was last edited in Unix time</td>
  </tr>
  <tr>
   <td>has_protected_content</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the message can't be forwarded</td>
  </tr>
  <tr>
   <td>media_group_id</td>
   <td>String</td>
   <td><em>Optional</em>. The unique identifier of a media message group this message belongs to</td>
  </tr>
  <tr>
   <td>author_signature</td>
   <td>String</td>
   <td><em>Optional</em>. Signature of the post author for messages in channels, or the custom title of an anonymous group administrator</td>
  </tr>
  <tr>
   <td>text</td>
   <td>String</td>
   <td><em>Optional</em>. For text messages, the actual UTF-8 text of the message</td>
  </tr>
  <tr>
   <td>entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text</td>
  </tr>
  <tr>
   <td>link_preview_options</td>
   <td><a href="#linkpreviewoptions">LinkPreviewOptions</a></td>
   <td><em>Optional</em>. Options used for link preview generation for the message, if it is a text message and link preview options were changed</td>
  </tr>
  <tr>
   <td>animation</td>
   <td><a href="#animation">Animation</a></td>
   <td><em>Optional</em>. Message is an animation, information about the animation. For backward compatibility, when this field is set, the <em>document</em> field will also be set</td>
  </tr>
  <tr>
   <td>audio</td>
   <td><a href="#audio">Audio</a></td>
   <td><em>Optional</em>. Message is an audio file, information about the file</td>
  </tr>
  <tr>
   <td>document</td>
   <td><a href="#document">Document</a></td>
   <td><em>Optional</em>. Message is a general file, information about the file</td>
  </tr>
  <tr>
   <td>photo</td>
   <td>Array of <a href="#photosize">PhotoSize</a></td>
   <td><em>Optional</em>. Message is a photo, available sizes of the photo</td>
  </tr>
  <tr>
   <td>sticker</td>
   <td><a href="#sticker">Sticker</a></td>
   <td><em>Optional</em>. Message is a sticker, information about the sticker</td>
  </tr>
  <tr>
   <td>story</td>
   <td><a href="#story">Story</a></td>
   <td><em>Optional</em>. Message is a forwarded story</td>
  </tr>
  <tr>
   <td>video</td>
   <td><a href="#video">Video</a></td>
   <td><em>Optional</em>. Message is a video, information about the video</td>
  </tr>
  <tr>
   <td>video_note</td>
   <td><a href="#videonote">VideoNote</a></td>
   <td><em>Optional</em>. Message is a <a href="https://telegram.org/blog/video-messages-and-telescope">video note</a>, information about the video message</td>
  </tr>
  <tr>
   <td>voice</td>
   <td><a href="#voice">Voice</a></td>
   <td><em>Optional</em>. Message is a voice message, information about the file</td>
  </tr>
  <tr>
   <td>caption</td>
   <td>String</td>
   <td><em>Optional</em>. Caption for the animation, audio, document, photo, video or voice</td>
  </tr>
  <tr>
   <td>caption_entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption</td>
  </tr>
  <tr>
   <td>has_media_spoiler</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the message media is covered by a spoiler animation</td>
  </tr>
  <tr>
   <td>contact</td>
   <td><a href="#contact">Contact</a></td>
   <td><em>Optional</em>. Message is a shared contact, information about the contact</td>
  </tr>
  <tr>
   <td>dice</td>
   <td><a href="#dice">Dice</a></td>
   <td><em>Optional</em>. Message is a dice with random value</td>
  </tr>
  <tr>
   <td>game</td>
   <td><a href="#game">Game</a></td>
   <td><em>Optional</em>. Message is a game, information about the game. <a href="#games">More about games »</a></td>
  </tr>
  <tr>
   <td>poll</td>
   <td><a href="#poll">Poll</a></td>
   <td><em>Optional</em>. Message is a native poll, information about the poll</td>
  </tr>
  <tr>
   <td>venue</td>
   <td><a href="#venue">Venue</a></td>
   <td><em>Optional</em>. Message is a venue, information about the venue. For backward compatibility, when this field is set, the <em>location</em> field will also be set</td>
  </tr>
  <tr>
   <td>location</td>
   <td><a href="#location">Location</a></td>
   <td><em>Optional</em>. Message is a shared location, information about the location</td>
  </tr>
  <tr>
   <td>new_chat_members</td>
   <td>Array of <a href="#user">User</a></td>
   <td><em>Optional</em>. New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)</td>
  </tr>
  <tr>
   <td>left_chat_member</td>
   <td><a href="#user">User</a></td>
   <td><em>Optional</em>. A member was removed from the group, information about them (this member may be the bot itself)</td>
  </tr>
  <tr>
   <td>new_chat_title</td>
   <td>String</td>
   <td><em>Optional</em>. A chat title was changed to this value</td>
  </tr>
  <tr>
   <td>new_chat_photo</td>
   <td>Array of <a href="#photosize">PhotoSize</a></td>
   <td><em>Optional</em>. A chat photo was change to this value</td>
  </tr>
  <tr>
   <td>delete_chat_photo</td>
   <td>True</td>
   <td><em>Optional</em>. Service message: the chat photo was deleted</td>
  </tr>
  <tr>
   <td>group_chat_created</td>
   <td>True</td>
   <td><em>Optional</em>. Service message: the group has been created</td>
  </tr>
  <tr>
   <td>supergroup_chat_created</td>
   <td>True</td>
   <td><em>Optional</em>. Service message: the supergroup has been created. This field can't be received in a message coming through updates, because bot can't be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.</td>
  </tr>
  <tr>
   <td>channel_chat_created</td>
   <td>True</td>
   <td><em>Optional</em>. Service message: the channel has been created. This field can't be received in a message coming through updates, because bot can't be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.</td>
  </tr>
  <tr>
   <td>message_auto_delete_timer_changed</td>
   <td><a href="#messageautodeletetimerchanged">MessageAutoDeleteTimerChanged</a></td>
   <td><em>Optional</em>. Service message: auto-delete timer settings changed in the chat</td>
  </tr>
  <tr>
   <td>migrate_to_chat_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. The group has been migrated to a supergroup with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.</td>
  </tr>
  <tr>
   <td>migrate_from_chat_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. The supergroup has been migrated from a group with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.</td>
  </tr>
  <tr>
   <td>pinned_message</td>
   <td><a href="#maybeinaccessiblemessage">MaybeInaccessibleMessage</a></td>
   <td><em>Optional</em>. Specified message was pinned. Note that the Message object in this field will not contain further <em>reply_to_message</em> fields even if it itself is a reply.</td>
  </tr>
  <tr>
   <td>invoice</td>
   <td><a href="#invoice">Invoice</a></td>
   <td><em>Optional</em>. Message is an invoice for a <a href="#payments">payment</a>, information about the invoice. <a href="#payments">More about payments »</a></td>
  </tr>
  <tr>
   <td>successful_payment</td>
   <td><a href="#successfulpayment">SuccessfulPayment</a></td>
   <td><em>Optional</em>. Message is a service message about a successful payment, information about the payment. <a href="#payments">More about payments »</a></td>
  </tr>
  <tr>
   <td>users_shared</td>
   <td><a href="#usersshared">UsersShared</a></td>
   <td><em>Optional</em>. Service message: users were shared with the bot</td>
  </tr>
  <tr>
   <td>chat_shared</td>
   <td><a href="#chatshared">ChatShared</a></td>
   <td><em>Optional</em>. Service message: a chat was shared with the bot</td>
  </tr>
  <tr>
   <td>connected_website</td>
   <td>String</td>
   <td><em>Optional</em>. The domain name of the website on which the user has logged in. <a href="/widgets/login">More about Telegram Login »</a></td>
  </tr>
  <tr>
   <td>write_access_allowed</td>
   <td><a href="#writeaccessallowed">WriteAccessAllowed</a></td>
   <td><em>Optional</em>. Service message: the user allowed the bot to write messages after adding it to the attachment or side menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method <a href="/bots/webapps#initializing-mini-apps">requestWriteAccess</a></td>
  </tr>
  <tr>
   <td>passport_data</td>
   <td><a href="#passportdata">PassportData</a></td>
   <td><em>Optional</em>. Telegram Passport data</td>
  </tr>
  <tr>
   <td>proximity_alert_triggered</td>
   <td><a href="#proximityalerttriggered">ProximityAlertTriggered</a></td>
   <td><em>Optional</em>. Service message. A user in the chat triggered another user's proximity alert while sharing Live Location.</td>
  </tr>
  <tr>
   <td>boost_added</td>
   <td><a href="#chatboostadded">ChatBoostAdded</a></td>
   <td><em>Optional</em>. Service message: user boosted the chat</td>
  </tr>
  <tr>
   <td>forum_topic_created</td>
   <td><a href="#forumtopiccreated">ForumTopicCreated</a></td>
   <td><em>Optional</em>. Service message: forum topic created</td>
  </tr>
  <tr>
   <td>forum_topic_edited</td>
   <td><a href="#forumtopicedited">ForumTopicEdited</a></td>
   <td><em>Optional</em>. Service message: forum topic edited</td>
  </tr>
  <tr>
   <td>forum_topic_closed</td>
   <td><a href="#forumtopicclosed">ForumTopicClosed</a></td>
   <td><em>Optional</em>. Service message: forum topic closed</td>
  </tr>
  <tr>
   <td>forum_topic_reopened</td>
   <td><a href="#forumtopicreopened">ForumTopicReopened</a></td>
   <td><em>Optional</em>. Service message: forum topic reopened</td>
  </tr>
  <tr>
   <td>general_forum_topic_hidden</td>
   <td><a href="#generalforumtopichidden">GeneralForumTopicHidden</a></td>
   <td><em>Optional</em>. Service message: the 'General' forum topic hidden</td>
  </tr>
  <tr>
   <td>general_forum_topic_unhidden</td>
   <td><a href="#generalforumtopicunhidden">GeneralForumTopicUnhidden</a></td>
   <td><em>Optional</em>. Service message: the 'General' forum topic unhidden</td>
  </tr>
  <tr>
   <td>giveaway_created</td>
   <td><a href="#giveawaycreated">GiveawayCreated</a></td>
   <td><em>Optional</em>. Service message: a scheduled giveaway was created</td>
  </tr>
  <tr>
   <td>giveaway</td>
   <td><a href="#giveaway">Giveaway</a></td>
   <td><em>Optional</em>. The message is a scheduled giveaway message</td>
  </tr>
  <tr>
   <td>giveaway_winners</td>
   <td><a href="#giveawaywinners">GiveawayWinners</a></td>
   <td><em>Optional</em>. A giveaway with public winners was completed</td>
  </tr>
  <tr>
   <td>giveaway_completed</td>
   <td><a href="#giveawaycompleted">GiveawayCompleted</a></td>
   <td><em>Optional</em>. Service message: a giveaway without public winners was completed</td>
  </tr>
  <tr>
   <td>video_chat_scheduled</td>
   <td><a href="#videochatscheduled">VideoChatScheduled</a></td>
   <td><em>Optional</em>. Service message: video chat scheduled</td>
  </tr>
  <tr>
   <td>video_chat_started</td>
   <td><a href="#videochatstarted">VideoChatStarted</a></td>
   <td><em>Optional</em>. Service message: video chat started</td>
  </tr>
  <tr>
   <td>video_chat_ended</td>
   <td><a href="#videochatended">VideoChatEnded</a></td>
   <td><em>Optional</em>. Service message: video chat ended</td>
  </tr>
  <tr>
   <td>video_chat_participants_invited</td>
   <td><a href="#videochatparticipantsinvited">VideoChatParticipantsInvited</a></td>
   <td><em>Optional</em>. Service message: new participants invited to a video chat</td>
  </tr>
  <tr>
   <td>web_app_data</td>
   <td><a href="#webappdata">WebAppData</a></td>
   <td><em>Optional</em>. Service message: data sent by a Web App</td>
  </tr>
  <tr>
   <td>reply_markup</td>
   <td><a href="#inlinekeyboardmarkup">InlineKeyboardMarkup</a></td>
   <td><em>Optional</em>. Inline keyboard attached to the message. <code>login_url</code> buttons are represented as ordinary <code>url</code> buttons.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="messageid" href="#messageid"><i class="anchor-icon"></i></a>MessageId</h4><p>This object represents a unique message identifier.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>message_id</td>
   <td>Integer</td>
   <td>Unique message identifier</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inaccessiblemessage" href="#inaccessiblemessage"><i class="anchor-icon"></i></a>InaccessibleMessage</h4><p>This object describes a message that was deleted or is otherwise inaccessible to the bot.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Chat the message belonged to</td>
  </tr>
  <tr>
   <td>message_id</td>
   <td>Integer</td>
   <td>Unique message identifier inside the chat</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Always 0. The field can be used to differentiate regular and inaccessible messages.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="maybeinaccessiblemessage" href="#maybeinaccessiblemessage"><i class="anchor-icon"></i></a>MaybeInaccessibleMessage</h4><p>This object describes a message that can be inaccessible to the bot. It can be one of</p><ul>
 <li><a href="#message">Message</a></li>
 <li><a href="#inaccessiblemessage">InaccessibleMessage</a></li>
</ul><h4><a class="anchor" name="messageentity" href="#messageentity"><i class="anchor-icon"></i></a>MessageEntity</h4><p>This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the entity. Currently, can be “mention” (<code>@username</code>), “hashtag” (<code>#hashtag</code>), “cashtag” (<code>$USD</code>), “bot_command” (<code>/start@jobs_bot</code>), “url” (<code>https://telegram.org</code>), “email” (<code>do-not-reply@telegram.org</code>), “phone_number” (<code>+1-212-555-0123</code>), “bold” (<strong>bold text</strong>), “italic” (<em>italic text</em>), “underline” (underlined text), “strikethrough” (strikethrough text), “spoiler” (spoiler message), “blockquote” (block quotation), “code” (monowidth string), “pre” (monowidth block), “text_link” (for clickable text URLs), “text_mention” (for users <a href="https://telegram.org/blog/edit#new-mentions">without usernames</a>), “custom_emoji” (for inline custom emoji stickers)</td>
  </tr>
  <tr>
   <td>offset</td>
   <td>Integer</td>
   <td>Offset in <a href="/api/entities#entity-length">UTF-16 code units</a> to the start of the entity</td>
  </tr>
  <tr>
   <td>length</td>
   <td>Integer</td>
   <td>Length of the entity in <a href="/api/entities#entity-length">UTF-16 code units</a></td>
  </tr>
  <tr>
   <td>url</td>
   <td>String</td>
   <td><em>Optional</em>. For “text_link” only, URL that will be opened after user taps on the text</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td><em>Optional</em>. For “text_mention” only, the mentioned user</td>
  </tr>
  <tr>
   <td>language</td>
   <td>String</td>
   <td><em>Optional</em>. For “pre” only, the programming language of the entity text</td>
  </tr>
  <tr>
   <td>custom_emoji_id</td>
   <td>String</td>
   <td><em>Optional</em>. For “custom_emoji” only, unique identifier of the custom emoji. Use <a href="#getcustomemojistickers">getCustomEmojiStickers</a> to get full information about the sticker</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="textquote" href="#textquote"><i class="anchor-icon"></i></a>TextQuote</h4><p>This object contains information about the quoted part of a message that is replied to by the given message.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>text</td>
   <td>String</td>
   <td>Text of the quoted part of a message that is replied to by the given message</td>
  </tr>
  <tr>
   <td>entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. Special entities that appear in the quote. Currently, only <em>bold</em>, <em>italic</em>, <em>underline</em>, <em>strikethrough</em>, <em>spoiler</em>, and <em>custom_emoji</em> entities are kept in quotes.</td>
  </tr>
  <tr>
   <td>position</td>
   <td>Integer</td>
   <td>Approximate quote position in the original message in UTF-16 code units as specified by the sender</td>
  </tr>
  <tr>
   <td>is_manual</td>
   <td>True</td>
   <td><em>Optional</em>. True, if the quote was chosen manually by the message sender. Otherwise, the quote was added automatically by the server.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="externalreplyinfo" href="#externalreplyinfo"><i class="anchor-icon"></i></a>ExternalReplyInfo</h4><p>This object contains information about a message that is being replied to, which may come from another chat or forum topic.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>origin</td>
   <td><a href="#messageorigin">MessageOrigin</a></td>
   <td>Origin of the message replied to by the given message</td>
  </tr>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td><em>Optional</em>. Chat the original message belongs to. Available only if the chat is a supergroup or a channel.</td>
  </tr>
  <tr>
   <td>message_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. Unique message identifier inside the original chat. Available only if the original chat is a supergroup or a channel.</td>
  </tr>
  <tr>
   <td>link_preview_options</td>
   <td><a href="#linkpreviewoptions">LinkPreviewOptions</a></td>
   <td><em>Optional</em>. Options used for link preview generation for the original message, if it is a text message</td>
  </tr>
  <tr>
   <td>animation</td>
   <td><a href="#animation">Animation</a></td>
   <td><em>Optional</em>. Message is an animation, information about the animation</td>
  </tr>
  <tr>
   <td>audio</td>
   <td><a href="#audio">Audio</a></td>
   <td><em>Optional</em>. Message is an audio file, information about the file</td>
  </tr>
  <tr>
   <td>document</td>
   <td><a href="#document">Document</a></td>
   <td><em>Optional</em>. Message is a general file, information about the file</td>
  </tr>
  <tr>
   <td>photo</td>
   <td>Array of <a href="#photosize">PhotoSize</a></td>
   <td><em>Optional</em>. Message is a photo, available sizes of the photo</td>
  </tr>
  <tr>
   <td>sticker</td>
   <td><a href="#sticker">Sticker</a></td>
   <td><em>Optional</em>. Message is a sticker, information about the sticker</td>
  </tr>
  <tr>
   <td>story</td>
   <td><a href="#story">Story</a></td>
   <td><em>Optional</em>. Message is a forwarded story</td>
  </tr>
  <tr>
   <td>video</td>
   <td><a href="#video">Video</a></td>
   <td><em>Optional</em>. Message is a video, information about the video</td>
  </tr>
  <tr>
   <td>video_note</td>
   <td><a href="#videonote">VideoNote</a></td>
   <td><em>Optional</em>. Message is a <a href="https://telegram.org/blog/video-messages-and-telescope">video note</a>, information about the video message</td>
  </tr>
  <tr>
   <td>voice</td>
   <td><a href="#voice">Voice</a></td>
   <td><em>Optional</em>. Message is a voice message, information about the file</td>
  </tr>
  <tr>
   <td>has_media_spoiler</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the message media is covered by a spoiler animation</td>
  </tr>
  <tr>
   <td>contact</td>
   <td><a href="#contact">Contact</a></td>
   <td><em>Optional</em>. Message is a shared contact, information about the contact</td>
  </tr>
  <tr>
   <td>dice</td>
   <td><a href="#dice">Dice</a></td>
   <td><em>Optional</em>. Message is a dice with random value</td>
  </tr>
  <tr>
   <td>game</td>
   <td><a href="#game">Game</a></td>
   <td><em>Optional</em>. Message is a game, information about the game. <a href="#games">More about games »</a></td>
  </tr>
  <tr>
   <td>giveaway</td>
   <td><a href="#giveaway">Giveaway</a></td>
   <td><em>Optional</em>. Message is a scheduled giveaway, information about the giveaway</td>
  </tr>
  <tr>
   <td>giveaway_winners</td>
   <td><a href="#giveawaywinners">GiveawayWinners</a></td>
   <td><em>Optional</em>. A giveaway with public winners was completed</td>
  </tr>
  <tr>
   <td>invoice</td>
   <td><a href="#invoice">Invoice</a></td>
   <td><em>Optional</em>. Message is an invoice for a <a href="#payments">payment</a>, information about the invoice. <a href="#payments">More about payments »</a></td>
  </tr>
  <tr>
   <td>location</td>
   <td><a href="#location">Location</a></td>
   <td><em>Optional</em>. Message is a shared location, information about the location</td>
  </tr>
  <tr>
   <td>poll</td>
   <td><a href="#poll">Poll</a></td>
   <td><em>Optional</em>. Message is a native poll, information about the poll</td>
  </tr>
  <tr>
   <td>venue</td>
   <td><a href="#venue">Venue</a></td>
   <td><em>Optional</em>. Message is a venue, information about the venue</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="replyparameters" href="#replyparameters"><i class="anchor-icon"></i></a>ReplyParameters</h4><p>Describes reply parameters for the message that is being sent.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>message_id</td>
   <td>Integer</td>
   <td>Identifier of the message that will be replied to in the current chat, or in the chat <em>chat_id</em> if it is specified</td>
  </tr>
  <tr>
   <td>chat_id</td>
   <td>Integer or String</td>
   <td><em>Optional</em>. If the message to be replied to is from a different chat, unique identifier for the chat or username of the channel (in the format <code>@channelusername</code>)</td>
  </tr>
  <tr>
   <td>allow_sending_without_reply</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> if the message should be sent even if the specified message to be replied to is not found; can be used only for replies in the same chat and forum topic.</td>
  </tr>
  <tr>
   <td>quote</td>
   <td>String</td>
   <td><em>Optional</em>. Quoted part of the message to be replied to; 0-1024 characters after entities parsing. The quote must be an exact substring of the message to be replied to, including <em>bold</em>, <em>italic</em>, <em>underline</em>, <em>strikethrough</em>, <em>spoiler</em>, and <em>custom_emoji</em> entities. The message will fail to send if the quote isn't found in the original message.</td>
  </tr>
  <tr>
   <td>quote_parse_mode</td>
   <td>String</td>
   <td><em>Optional</em>. Mode for parsing entities in the quote. See <a href="#formatting-options">formatting options</a> for more details.</td>
  </tr>
  <tr>
   <td>quote_entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. A JSON-serialized list of special entities that appear in the quote. It can be specified instead of <em>quote_parse_mode</em>.</td>
  </tr>
  <tr>
   <td>quote_position</td>
   <td>Integer</td>
   <td><em>Optional</em>. Position of the quote in the original message in UTF-16 code units</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="messageorigin" href="#messageorigin"><i class="anchor-icon"></i></a>MessageOrigin</h4><p>This object describes the origin of a message. It can be one of</p><ul>
 <li><a href="#messageoriginuser">MessageOriginUser</a></li>
 <li><a href="#messageoriginhiddenuser">MessageOriginHiddenUser</a></li>
 <li><a href="#messageoriginchat">MessageOriginChat</a></li>
 <li><a href="#messageoriginchannel">MessageOriginChannel</a></li>
</ul><h4><a class="anchor" name="messageoriginuser" href="#messageoriginuser"><i class="anchor-icon"></i></a>MessageOriginUser</h4><p>The message was originally sent by a known user.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the message origin, always “user”</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date the message was sent originally in Unix time</td>
  </tr>
  <tr>
   <td>sender_user</td>
   <td><a href="#user">User</a></td>
   <td>User that sent the message originally</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="messageoriginhiddenuser" href="#messageoriginhiddenuser"><i class="anchor-icon"></i></a>MessageOriginHiddenUser</h4><p>The message was originally sent by an unknown user.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the message origin, always “hidden_user”</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date the message was sent originally in Unix time</td>
  </tr>
  <tr>
   <td>sender_user_name</td>
   <td>String</td>
   <td>Name of the user that sent the message originally</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="messageoriginchat" href="#messageoriginchat"><i class="anchor-icon"></i></a>MessageOriginChat</h4><p>The message was originally sent on behalf of a chat to a group chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the message origin, always “chat”</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date the message was sent originally in Unix time</td>
  </tr>
  <tr>
   <td>sender_chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Chat that sent the message originally</td>
  </tr>
  <tr>
   <td>author_signature</td>
   <td>String</td>
   <td><em>Optional</em>. For messages originally sent by an anonymous chat administrator, original message author signature</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="messageoriginchannel" href="#messageoriginchannel"><i class="anchor-icon"></i></a>MessageOriginChannel</h4><p>The message was originally sent to a channel chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the message origin, always “channel”</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date the message was sent originally in Unix time</td>
  </tr>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Channel chat to which the message was originally sent</td>
  </tr>
  <tr>
   <td>message_id</td>
   <td>Integer</td>
   <td>Unique message identifier inside the chat</td>
  </tr>
  <tr>
   <td>author_signature</td>
   <td>String</td>
   <td><em>Optional</em>. Signature of the original post author</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="photosize" href="#photosize"><i class="anchor-icon"></i></a>PhotoSize</h4><p>This object represents one size of a photo or a <a href="#document">file</a> / <a href="#sticker">sticker</a> thumbnail.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>file_id</td>
   <td>String</td>
   <td>Identifier for this file, which can be used to download or reuse the file</td>
  </tr>
  <tr>
   <td>file_unique_id</td>
   <td>String</td>
   <td>Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>width</td>
   <td>Integer</td>
   <td>Photo width</td>
  </tr>
  <tr>
   <td>height</td>
   <td>Integer</td>
   <td>Photo height</td>
  </tr>
  <tr>
   <td>file_size</td>
   <td>Integer</td>
   <td><em>Optional</em>. File size in bytes</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="animation" href="#animation"><i class="anchor-icon"></i></a>Animation</h4><p>This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>file_id</td>
   <td>String</td>
   <td>Identifier for this file, which can be used to download or reuse the file</td>
  </tr>
  <tr>
   <td>file_unique_id</td>
   <td>String</td>
   <td>Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>width</td>
   <td>Integer</td>
   <td>Video width as defined by sender</td>
  </tr>
  <tr>
   <td>height</td>
   <td>Integer</td>
   <td>Video height as defined by sender</td>
  </tr>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td>Duration of the video in seconds as defined by sender</td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#photosize">PhotoSize</a></td>
   <td><em>Optional</em>. Animation thumbnail as defined by sender</td>
  </tr>
  <tr>
   <td>file_name</td>
   <td>String</td>
   <td><em>Optional</em>. Original animation filename as defined by sender</td>
  </tr>
  <tr>
   <td>mime_type</td>
   <td>String</td>
   <td><em>Optional</em>. MIME type of the file as defined by sender</td>
  </tr>
  <tr>
   <td>file_size</td>
   <td>Integer</td>
   <td><em>Optional</em>. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="audio" href="#audio"><i class="anchor-icon"></i></a>Audio</h4><p>This object represents an audio file to be treated as music by the Telegram clients.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>file_id</td>
   <td>String</td>
   <td>Identifier for this file, which can be used to download or reuse the file</td>
  </tr>
  <tr>
   <td>file_unique_id</td>
   <td>String</td>
   <td>Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td>Duration of the audio in seconds as defined by sender</td>
  </tr>
  <tr>
   <td>performer</td>
   <td>String</td>
   <td><em>Optional</em>. Performer of the audio as defined by sender or by audio tags</td>
  </tr>
  <tr>
   <td>title</td>
   <td>String</td>
   <td><em>Optional</em>. Title of the audio as defined by sender or by audio tags</td>
  </tr>
  <tr>
   <td>file_name</td>
   <td>String</td>
   <td><em>Optional</em>. Original filename as defined by sender</td>
  </tr>
  <tr>
   <td>mime_type</td>
   <td>String</td>
   <td><em>Optional</em>. MIME type of the file as defined by sender</td>
  </tr>
  <tr>
   <td>file_size</td>
   <td>Integer</td>
   <td><em>Optional</em>. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#photosize">PhotoSize</a></td>
   <td><em>Optional</em>. Thumbnail of the album cover to which the music file belongs</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="document" href="#document"><i class="anchor-icon"></i></a>Document</h4><p>This object represents a general file (as opposed to <a href="#photosize">photos</a>, <a href="#voice">voice messages</a> and <a href="#audio">audio files</a>).</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>file_id</td>
   <td>String</td>
   <td>Identifier for this file, which can be used to download or reuse the file</td>
  </tr>
  <tr>
   <td>file_unique_id</td>
   <td>String</td>
   <td>Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#photosize">PhotoSize</a></td>
   <td><em>Optional</em>. Document thumbnail as defined by sender</td>
  </tr>
  <tr>
   <td>file_name</td>
   <td>String</td>
   <td><em>Optional</em>. Original filename as defined by sender</td>
  </tr>
  <tr>
   <td>mime_type</td>
   <td>String</td>
   <td><em>Optional</em>. MIME type of the file as defined by sender</td>
  </tr>
  <tr>
   <td>file_size</td>
   <td>Integer</td>
   <td><em>Optional</em>. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="story" href="#story"><i class="anchor-icon"></i></a>Story</h4><p>This object represents a story.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Chat that posted the story</td>
  </tr>
  <tr>
   <td>id</td>
   <td>Integer</td>
   <td>Unique identifier for the story in the chat</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="video" href="#video"><i class="anchor-icon"></i></a>Video</h4><p>This object represents a video file.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>file_id</td>
   <td>String</td>
   <td>Identifier for this file, which can be used to download or reuse the file</td>
  </tr>
  <tr>
   <td>file_unique_id</td>
   <td>String</td>
   <td>Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>width</td>
   <td>Integer</td>
   <td>Video width as defined by sender</td>
  </tr>
  <tr>
   <td>height</td>
   <td>Integer</td>
   <td>Video height as defined by sender</td>
  </tr>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td>Duration of the video in seconds as defined by sender</td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#photosize">PhotoSize</a></td>
   <td><em>Optional</em>. Video thumbnail</td>
  </tr>
  <tr>
   <td>file_name</td>
   <td>String</td>
   <td><em>Optional</em>. Original filename as defined by sender</td>
  </tr>
  <tr>
   <td>mime_type</td>
   <td>String</td>
   <td><em>Optional</em>. MIME type of the file as defined by sender</td>
  </tr>
  <tr>
   <td>file_size</td>
   <td>Integer</td>
   <td><em>Optional</em>. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="videonote" href="#videonote"><i class="anchor-icon"></i></a>VideoNote</h4><p>This object represents a <a href="https://telegram.org/blog/video-messages-and-telescope">video message</a> (available in Telegram apps as of <a href="https://telegram.org/blog/video-messages-and-telescope">v.4.0</a>).</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>file_id</td>
   <td>String</td>
   <td>Identifier for this file, which can be used to download or reuse the file</td>
  </tr>
  <tr>
   <td>file_unique_id</td>
   <td>String</td>
   <td>Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>length</td>
   <td>Integer</td>
   <td>Video width and height (diameter of the video message) as defined by sender</td>
  </tr>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td>Duration of the video in seconds as defined by sender</td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#photosize">PhotoSize</a></td>
   <td><em>Optional</em>. Video thumbnail</td>
  </tr>
  <tr>
   <td>file_size</td>
   <td>Integer</td>
   <td><em>Optional</em>. File size in bytes</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="voice" href="#voice"><i class="anchor-icon"></i></a>Voice</h4><p>This object represents a voice note.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>file_id</td>
   <td>String</td>
   <td>Identifier for this file, which can be used to download or reuse the file</td>
  </tr>
  <tr>
   <td>file_unique_id</td>
   <td>String</td>
   <td>Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td>Duration of the audio in seconds as defined by sender</td>
  </tr>
  <tr>
   <td>mime_type</td>
   <td>String</td>
   <td><em>Optional</em>. MIME type of the file as defined by sender</td>
  </tr>
  <tr>
   <td>file_size</td>
   <td>Integer</td>
   <td><em>Optional</em>. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="contact" href="#contact"><i class="anchor-icon"></i></a>Contact</h4><p>This object represents a phone contact.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>phone_number</td>
   <td>String</td>
   <td>Contact's phone number</td>
  </tr>
  <tr>
   <td>first_name</td>
   <td>String</td>
   <td>Contact's first name</td>
  </tr>
  <tr>
   <td>last_name</td>
   <td>String</td>
   <td><em>Optional</em>. Contact's last name</td>
  </tr>
  <tr>
   <td>user_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. Contact's user identifier in Telegram. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.</td>
  </tr>
  <tr>
   <td>vcard</td>
   <td>String</td>
   <td><em>Optional</em>. Additional data about the contact in the form of a <a href="https://en.wikipedia.org/wiki/VCard">vCard</a></td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="dice" href="#dice"><i class="anchor-icon"></i></a>Dice</h4><p>This object represents an animated emoji that displays a random value.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>emoji</td>
   <td>String</td>
   <td>Emoji on which the dice throw animation is based</td>
  </tr>
  <tr>
   <td>value</td>
   <td>Integer</td>
   <td>Value of the dice, 1-6 for “<img class="emoji" src="//telegram.org/img/emoji/40/F09F8EB2.png" width="20" height="20" alt="🎲">”, “<img class="emoji" src="//telegram.org/img/emoji/40/F09F8EAF.png" width="20" height="20" alt="🎯">” and “<img class="emoji" src="//telegram.org/img/emoji/40/F09F8EB3.png" width="20" height="20" alt="🎳">” base emoji, 1-5 for “<img class="emoji" src="//telegram.org/img/emoji/40/F09F8F80.png" width="20" height="20" alt="🏀">” and “<img class="emoji" src="//telegram.org/img/emoji/40/E29ABD.png" width="20" height="20" alt="⚽">” base emoji, 1-64 for “<img class="emoji" src="//telegram.org/img/emoji/40/F09F8EB0.png" width="20" height="20" alt="🎰">” base emoji</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="polloption" href="#polloption"><i class="anchor-icon"></i></a>PollOption</h4><p>This object contains information about one answer option in a poll.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>text</td>
   <td>String</td>
   <td>Option text, 1-100 characters</td>
  </tr>
  <tr>
   <td>voter_count</td>
   <td>Integer</td>
   <td>Number of users that voted for this option</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="pollanswer" href="#pollanswer"><i class="anchor-icon"></i></a>PollAnswer</h4><p>This object represents an answer of a user in a non-anonymous poll.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>poll_id</td>
   <td>String</td>
   <td>Unique poll identifier</td>
  </tr>
  <tr>
   <td>voter_chat</td>
   <td><a href="#chat">Chat</a></td>
   <td><em>Optional</em>. The chat that changed the answer to the poll, if the voter is anonymous</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td><em>Optional</em>. The user that changed the answer to the poll, if the voter isn't anonymous</td>
  </tr>
  <tr>
   <td>option_ids</td>
   <td>Array of Integer</td>
   <td>0-based identifiers of chosen answer options. May be empty if the vote was retracted.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="poll" href="#poll"><i class="anchor-icon"></i></a>Poll</h4><p>This object contains information about a poll.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>id</td>
   <td>String</td>
   <td>Unique poll identifier</td>
  </tr>
  <tr>
   <td>question</td>
   <td>String</td>
   <td>Poll question, 1-300 characters</td>
  </tr>
  <tr>
   <td>options</td>
   <td>Array of <a href="#polloption">PollOption</a></td>
   <td>List of poll options</td>
  </tr>
  <tr>
   <td>total_voter_count</td>
   <td>Integer</td>
   <td>Total number of users that voted in the poll</td>
  </tr>
  <tr>
   <td>is_closed</td>
   <td>Boolean</td>
   <td><em>True</em>, if the poll is closed</td>
  </tr>
  <tr>
   <td>is_anonymous</td>
   <td>Boolean</td>
   <td><em>True</em>, if the poll is anonymous</td>
  </tr>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Poll type, currently can be “regular” or “quiz”</td>
  </tr>
  <tr>
   <td>allows_multiple_answers</td>
   <td>Boolean</td>
   <td><em>True</em>, if the poll allows multiple answers</td>
  </tr>
  <tr>
   <td>correct_option_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. 0-based identifier of the correct answer option. Available only for polls in the quiz mode, which are closed, or was sent (not forwarded) by the bot or to the private chat with the bot.</td>
  </tr>
  <tr>
   <td>explanation</td>
   <td>String</td>
   <td><em>Optional</em>. Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters</td>
  </tr>
  <tr>
   <td>explanation_entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. Special entities like usernames, URLs, bot commands, etc. that appear in the <em>explanation</em></td>
  </tr>
  <tr>
   <td>open_period</td>
   <td>Integer</td>
   <td><em>Optional</em>. Amount of time in seconds the poll will be active after creation</td>
  </tr>
  <tr>
   <td>close_date</td>
   <td>Integer</td>
   <td><em>Optional</em>. Point in time (Unix timestamp) when the poll will be automatically closed</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="location" href="#location"><i class="anchor-icon"></i></a>Location</h4><p>This object represents a point on the map.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>latitude</td>
   <td>Float</td>
   <td>Latitude as defined by sender</td>
  </tr>
  <tr>
   <td>longitude</td>
   <td>Float</td>
   <td>Longitude as defined by sender</td>
  </tr>
  <tr>
   <td>horizontal_accuracy</td>
   <td>Float</td>
   <td><em>Optional</em>. The radius of uncertainty for the location, measured in meters; 0-1500</td>
  </tr>
  <tr>
   <td>live_period</td>
   <td>Integer</td>
   <td><em>Optional</em>. Time relative to the message sending date, during which the location can be updated; in seconds. For active live locations only.</td>
  </tr>
  <tr>
   <td>heading</td>
   <td>Integer</td>
   <td><em>Optional</em>. The direction in which user is moving, in degrees; 1-360. For active live locations only.</td>
  </tr>
  <tr>
   <td>proximity_alert_radius</td>
   <td>Integer</td>
   <td><em>Optional</em>. The maximum distance for proximity alerts about approaching another chat member, in meters. For sent live locations only.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="venue" href="#venue"><i class="anchor-icon"></i></a>Venue</h4><p>This object represents a venue.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>location</td>
   <td><a href="#location">Location</a></td>
   <td>Venue location. Can't be a live location</td>
  </tr>
  <tr>
   <td>title</td>
   <td>String</td>
   <td>Name of the venue</td>
  </tr>
  <tr>
   <td>address</td>
   <td>String</td>
   <td>Address of the venue</td>
  </tr>
  <tr>
   <td>foursquare_id</td>
   <td>String</td>
   <td><em>Optional</em>. Foursquare identifier of the venue</td>
  </tr>
  <tr>
   <td>foursquare_type</td>
   <td>String</td>
   <td><em>Optional</em>. Foursquare type of the venue. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)</td>
  </tr>
  <tr>
   <td>google_place_id</td>
   <td>String</td>
   <td><em>Optional</em>. Google Places identifier of the venue</td>
  </tr>
  <tr>
   <td>google_place_type</td>
   <td>String</td>
   <td><em>Optional</em>. Google Places type of the venue. (See <a href="https://developers.google.com/places/web-service/supported_types">supported types</a>.)</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="webappdata" href="#webappdata"><i class="anchor-icon"></i></a>WebAppData</h4><p>Describes data sent from a <a href="/bots/webapps">Web App</a> to the bot.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>data</td>
   <td>String</td>
   <td>The data. Be aware that a bad client can send arbitrary data in this field.</td>
  </tr>
  <tr>
   <td>button_text</td>
   <td>String</td>
   <td>Text of the <em>web_app</em> keyboard button from which the Web App was opened. Be aware that a bad client can send arbitrary data in this field.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="proximityalerttriggered" href="#proximityalerttriggered"><i class="anchor-icon"></i></a>ProximityAlertTriggered</h4><p>This object represents the content of a service message, sent whenever a user in the chat triggers a proximity alert set by another user.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>traveler</td>
   <td><a href="#user">User</a></td>
   <td>User that triggered the alert</td>
  </tr>
  <tr>
   <td>watcher</td>
   <td><a href="#user">User</a></td>
   <td>User that set the alert</td>
  </tr>
  <tr>
   <td>distance</td>
   <td>Integer</td>
   <td>The distance between the users</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="messageautodeletetimerchanged" href="#messageautodeletetimerchanged"><i class="anchor-icon"></i></a>MessageAutoDeleteTimerChanged</h4><p>This object represents a service message about a change in auto-delete timer settings.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>message_auto_delete_time</td>
   <td>Integer</td>
   <td>New auto-delete time for messages in the chat; in seconds</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatboostadded" href="#chatboostadded"><i class="anchor-icon"></i></a>ChatBoostAdded</h4><p>This object represents a service message about a user boosting a chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>boost_count</td>
   <td>Integer</td>
   <td>Number of boosts added by the user</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="forumtopiccreated" href="#forumtopiccreated"><i class="anchor-icon"></i></a>ForumTopicCreated</h4><p>This object represents a service message about a new forum topic created in the chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>name</td>
   <td>String</td>
   <td>Name of the topic</td>
  </tr>
  <tr>
   <td>icon_color</td>
   <td>Integer</td>
   <td>Color of the topic icon in RGB format</td>
  </tr>
  <tr>
   <td>icon_custom_emoji_id</td>
   <td>String</td>
   <td><em>Optional</em>. Unique identifier of the custom emoji shown as the topic icon</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="forumtopicclosed" href="#forumtopicclosed"><i class="anchor-icon"></i></a>ForumTopicClosed</h4><p>This object represents a service message about a forum topic closed in the chat. Currently holds no information.</p><h4><a class="anchor" name="forumtopicedited" href="#forumtopicedited"><i class="anchor-icon"></i></a>ForumTopicEdited</h4><p>This object represents a service message about an edited forum topic.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>name</td>
   <td>String</td>
   <td><em>Optional</em>. New name of the topic, if it was edited</td>
  </tr>
  <tr>
   <td>icon_custom_emoji_id</td>
   <td>String</td>
   <td><em>Optional</em>. New identifier of the custom emoji shown as the topic icon, if it was edited; an empty string if the icon was removed</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="forumtopicreopened" href="#forumtopicreopened"><i class="anchor-icon"></i></a>ForumTopicReopened</h4><p>This object represents a service message about a forum topic reopened in the chat. Currently holds no information.</p><h4><a class="anchor" name="generalforumtopichidden" href="#generalforumtopichidden"><i class="anchor-icon"></i></a>GeneralForumTopicHidden</h4><p>This object represents a service message about General forum topic hidden in the chat. Currently holds no information.</p><h4><a class="anchor" name="generalforumtopicunhidden" href="#generalforumtopicunhidden"><i class="anchor-icon"></i></a>GeneralForumTopicUnhidden</h4><p>This object represents a service message about General forum topic unhidden in the chat. Currently holds no information.</p><h4><a class="anchor" name="usersshared" href="#usersshared"><i class="anchor-icon"></i></a>UsersShared</h4><p>This object contains information about the users whose identifiers were shared with the bot using a <a href="#keyboardbuttonrequestusers">KeyboardButtonRequestUsers</a> button.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>request_id</td>
   <td>Integer</td>
   <td>Identifier of the request</td>
  </tr>
  <tr>
   <td>user_ids</td>
   <td>Array of Integer</td>
   <td>Identifiers of the shared users. These numbers may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting them. But they have at most 52 significant bits, so 64-bit integers or double-precision float types are safe for storing these identifiers. The bot may not have access to the users and could be unable to use these identifiers, unless the users are already known to the bot by some other means.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatshared" href="#chatshared"><i class="anchor-icon"></i></a>ChatShared</h4><p>This object contains information about the chat whose identifier was shared with the bot using a <a href="#keyboardbuttonrequestchat">KeyboardButtonRequestChat</a> button.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>request_id</td>
   <td>Integer</td>
   <td>Identifier of the request</td>
  </tr>
  <tr>
   <td>chat_id</td>
   <td>Integer</td>
   <td>Identifier of the shared chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier. The bot may not have access to the chat and could be unable to use this identifier, unless the chat is already known to the bot by some other means.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="writeaccessallowed" href="#writeaccessallowed"><i class="anchor-icon"></i></a>WriteAccessAllowed</h4><p>This object represents a service message about a user allowing a bot to write messages after adding it to the attachment menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method <a href="/bots/webapps#initializing-mini-apps">requestWriteAccess</a>.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>from_request</td>
   <td>Boolean</td>
   <td><em>Optional</em>. True, if the access was granted after the user accepted an explicit request from a Web App sent by the method <a href="/bots/webapps#initializing-mini-apps">requestWriteAccess</a></td>
  </tr>
  <tr>
   <td>web_app_name</td>
   <td>String</td>
   <td><em>Optional</em>. Name of the Web App, if the access was granted when the Web App was launched from a link</td>
  </tr>
  <tr>
   <td>from_attachment_menu</td>
   <td>Boolean</td>
   <td><em>Optional</em>. True, if the access was granted when the bot was added to the attachment or side menu</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="videochatscheduled" href="#videochatscheduled"><i class="anchor-icon"></i></a>VideoChatScheduled</h4><p>This object represents a service message about a video chat scheduled in the chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>start_date</td>
   <td>Integer</td>
   <td>Point in time (Unix timestamp) when the video chat is supposed to be started by a chat administrator</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="videochatstarted" href="#videochatstarted"><i class="anchor-icon"></i></a>VideoChatStarted</h4><p>This object represents a service message about a video chat started in the chat. Currently holds no information.</p><h4><a class="anchor" name="videochatended" href="#videochatended"><i class="anchor-icon"></i></a>VideoChatEnded</h4><p>This object represents a service message about a video chat ended in the chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td>Video chat duration in seconds</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="videochatparticipantsinvited" href="#videochatparticipantsinvited"><i class="anchor-icon"></i></a>VideoChatParticipantsInvited</h4><p>This object represents a service message about new members invited to a video chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>users</td>
   <td>Array of <a href="#user">User</a></td>
   <td>New members that were invited to the video chat</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="giveawaycreated" href="#giveawaycreated"><i class="anchor-icon"></i></a>GiveawayCreated</h4><p>This object represents a service message about the creation of a scheduled giveaway. Currently holds no information.</p><h4><a class="anchor" name="giveaway" href="#giveaway"><i class="anchor-icon"></i></a>Giveaway</h4><p>This object represents a message about a scheduled giveaway.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chats</td>
   <td>Array of <a href="#chat">Chat</a></td>
   <td>The list of chats which the user must join to participate in the giveaway</td>
  </tr>
  <tr>
   <td>winners_selection_date</td>
   <td>Integer</td>
   <td>Point in time (Unix timestamp) when winners of the giveaway will be selected</td>
  </tr>
  <tr>
   <td>winner_count</td>
   <td>Integer</td>
   <td>The number of users which are supposed to be selected as winners of the giveaway</td>
  </tr>
  <tr>
   <td>only_new_members</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if only users who join the chats after the giveaway started should be eligible to win</td>
  </tr>
  <tr>
   <td>has_public_winners</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the list of giveaway winners will be visible to everyone</td>
  </tr>
  <tr>
   <td>prize_description</td>
   <td>String</td>
   <td><em>Optional</em>. Description of additional giveaway prize</td>
  </tr>
  <tr>
   <td>country_codes</td>
   <td>Array of String</td>
   <td><em>Optional</em>. A list of two-letter <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a> country codes indicating the countries from which eligible users for the giveaway must come. If empty, then all users can participate in the giveaway. Users with a phone number that was bought on Fragment can always participate in giveaways.</td>
  </tr>
  <tr>
   <td>premium_subscription_month_count</td>
   <td>Integer</td>
   <td><em>Optional</em>. The number of months the Telegram Premium subscription won from the giveaway will be active for</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="giveawaywinners" href="#giveawaywinners"><i class="anchor-icon"></i></a>GiveawayWinners</h4><p>This object represents a message about the completion of a giveaway with public winners.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>The chat that created the giveaway</td>
  </tr>
  <tr>
   <td>giveaway_message_id</td>
   <td>Integer</td>
   <td>Identifier of the message with the giveaway in the chat</td>
  </tr>
  <tr>
   <td>winners_selection_date</td>
   <td>Integer</td>
   <td>Point in time (Unix timestamp) when winners of the giveaway were selected</td>
  </tr>
  <tr>
   <td>winner_count</td>
   <td>Integer</td>
   <td>Total number of winners in the giveaway</td>
  </tr>
  <tr>
   <td>winners</td>
   <td>Array of <a href="#user">User</a></td>
   <td>List of up to 100 winners of the giveaway</td>
  </tr>
  <tr>
   <td>additional_chat_count</td>
   <td>Integer</td>
   <td><em>Optional</em>. The number of other chats the user had to join in order to be eligible for the giveaway</td>
  </tr>
  <tr>
   <td>premium_subscription_month_count</td>
   <td>Integer</td>
   <td><em>Optional</em>. The number of months the Telegram Premium subscription won from the giveaway will be active for</td>
  </tr>
  <tr>
   <td>unclaimed_prize_count</td>
   <td>Integer</td>
   <td><em>Optional</em>. Number of undistributed prizes</td>
  </tr>
  <tr>
   <td>only_new_members</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if only users who had joined the chats after the giveaway started were eligible to win</td>
  </tr>
  <tr>
   <td>was_refunded</td>
   <td>True</td>
   <td><em>Optional</em>. <em>True</em>, if the giveaway was canceled because the payment for it was refunded</td>
  </tr>
  <tr>
   <td>prize_description</td>
   <td>String</td>
   <td><em>Optional</em>. Description of additional giveaway prize</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="giveawaycompleted" href="#giveawaycompleted"><i class="anchor-icon"></i></a>GiveawayCompleted</h4><p>This object represents a service message about the completion of a giveaway without public winners.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>winner_count</td>
   <td>Integer</td>
   <td>Number of winners in the giveaway</td>
  </tr>
  <tr>
   <td>unclaimed_prize_count</td>
   <td>Integer</td>
   <td><em>Optional</em>. Number of undistributed prizes</td>
  </tr>
  <tr>
   <td>giveaway_message</td>
   <td><a href="#message">Message</a></td>
   <td><em>Optional</em>. Message with the giveaway that was completed, if it wasn't deleted</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="linkpreviewoptions" href="#linkpreviewoptions"><i class="anchor-icon"></i></a>LinkPreviewOptions</h4><p>Describes the options used for link preview generation.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>is_disabled</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the link preview is disabled</td>
  </tr>
  <tr>
   <td>url</td>
   <td>String</td>
   <td><em>Optional</em>. URL to use for the link preview. If empty, then the first URL found in the message text will be used</td>
  </tr>
  <tr>
   <td>prefer_small_media</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the media in the link preview is supposed to be shrunk; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview</td>
  </tr>
  <tr>
   <td>prefer_large_media</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the media in the link preview is supposed to be enlarged; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview</td>
  </tr>
  <tr>
   <td>show_above_text</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the link preview must be shown above the message text; otherwise, the link preview will be shown below the message text</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="userprofilephotos" href="#userprofilephotos"><i class="anchor-icon"></i></a>UserProfilePhotos</h4><p>This object represent a user's profile pictures.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>total_count</td>
   <td>Integer</td>
   <td>Total number of profile pictures the target user has</td>
  </tr>
  <tr>
   <td>photos</td>
   <td>Array of Array of <a href="#photosize">PhotoSize</a></td>
   <td>Requested profile pictures (in up to 4 sizes each)</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="file" href="#file"><i class="anchor-icon"></i></a>File</h4><p>This object represents a file ready to be downloaded. The file can be downloaded via the link <code>https://api.telegram.org/file/bot&lt;token&gt;/&lt;file_path&gt;</code>. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling <a href="#getfile">getFile</a>.</p><blockquote>
 <p>The maximum file size to download is 20 MB</p>
</blockquote><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>file_id</td>
   <td>String</td>
   <td>Identifier for this file, which can be used to download or reuse the file</td>
  </tr>
  <tr>
   <td>file_unique_id</td>
   <td>String</td>
   <td>Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>file_size</td>
   <td>Integer</td>
   <td><em>Optional</em>. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</td>
  </tr>
  <tr>
   <td>file_path</td>
   <td>String</td>
   <td><em>Optional</em>. File path. Use <code>https://api.telegram.org/file/bot&lt;token&gt;/&lt;file_path&gt;</code> to get the file.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="webappinfo" href="#webappinfo"><i class="anchor-icon"></i></a>WebAppInfo</h4><p>Describes a <a href="/bots/webapps">Web App</a>.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>url</td>
   <td>String</td>
   <td>An HTTPS URL of a Web App to be opened with additional data as specified in <a href="/bots/webapps#initializing-mini-apps">Initializing Web Apps</a></td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="replykeyboardmarkup" href="#replykeyboardmarkup"><i class="anchor-icon"></i></a>ReplyKeyboardMarkup</h4><p>This object represents a <a href="/bots/features#keyboards">custom keyboard</a> with reply options (see <a href="/bots/features#keyboards">Introduction to bots</a> for details and examples).</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>keyboard</td>
   <td>Array of Array of <a href="#keyboardbutton">KeyboardButton</a></td>
   <td>Array of button rows, each represented by an Array of <a href="#keyboardbutton">KeyboardButton</a> objects</td>
  </tr>
  <tr>
   <td>is_persistent</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Requests clients to always show the keyboard when the regular keyboard is hidden. Defaults to <em>false</em>, in which case the custom keyboard can be hidden and opened with a keyboard icon.</td>
  </tr>
  <tr>
   <td>resize_keyboard</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to <em>false</em>, in which case the custom keyboard is always of the same height as the app's standard keyboard.</td>
  </tr>
  <tr>
   <td>one_time_keyboard</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat - the user can press a special button in the input field to see the custom keyboard again. Defaults to <em>false</em>.</td>
  </tr>
  <tr>
   <td>input_field_placeholder</td>
   <td>String</td>
   <td><em>Optional</em>. The placeholder to be shown in the input field when the keyboard is active; 1-64 characters</td>
  </tr>
  <tr>
   <td>selective</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the <em>text</em> of the <a href="#message">Message</a> object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.<br><br><em>Example:</em> A user requests to change the bot's language, bot replies to the request with a keyboard to select the new language. Other users in the group don't see the keyboard.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="keyboardbutton" href="#keyboardbutton"><i class="anchor-icon"></i></a>KeyboardButton</h4><p>This object represents one button of the reply keyboard. For simple text buttons, <em>String</em> can be used instead of this object to specify the button text. The optional fields <em>web_app</em>, <em>request_users</em>, <em>request_chat</em>, <em>request_contact</em>, <em>request_location</em>, and <em>request_poll</em> are mutually exclusive.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>text</td>
   <td>String</td>
   <td>Text of the button. If none of the optional fields are used, it will be sent as a message when the button is pressed</td>
  </tr>
  <tr>
   <td>request_users</td>
   <td><a href="#keyboardbuttonrequestusers">KeyboardButtonRequestUsers</a></td>
   <td><em>Optional.</em> If specified, pressing the button will open a list of suitable users. Identifiers of selected users will be sent to the bot in a “users_shared” service message. Available in private chats only.</td>
  </tr>
  <tr>
   <td>request_chat</td>
   <td><a href="#keyboardbuttonrequestchat">KeyboardButtonRequestChat</a></td>
   <td><em>Optional.</em> If specified, pressing the button will open a list of suitable chats. Tapping on a chat will send its identifier to the bot in a “chat_shared” service message. Available in private chats only.</td>
  </tr>
  <tr>
   <td>request_contact</td>
   <td>Boolean</td>
   <td><em>Optional</em>. If <em>True</em>, the user's phone number will be sent as a contact when the button is pressed. Available in private chats only.</td>
  </tr>
  <tr>
   <td>request_location</td>
   <td>Boolean</td>
   <td><em>Optional</em>. If <em>True</em>, the user's current location will be sent when the button is pressed. Available in private chats only.</td>
  </tr>
  <tr>
   <td>request_poll</td>
   <td><a href="#keyboardbuttonpolltype">KeyboardButtonPollType</a></td>
   <td><em>Optional</em>. If specified, the user will be asked to create a poll and send it to the bot when the button is pressed. Available in private chats only.</td>
  </tr>
  <tr>
   <td>web_app</td>
   <td><a href="#webappinfo">WebAppInfo</a></td>
   <td><em>Optional</em>. If specified, the described <a href="/bots/webapps">Web App</a> will be launched when the button is pressed. The Web App will be able to send a “web_app_data” service message. Available in private chats only.</td>
  </tr>
 </tbody>
</table><p><strong>Note:</strong> <em>request_users</em> and <em>request_chat</em> options will only work in Telegram versions released after 3 February, 2023. Older clients will display <em>unsupported message</em>.</p><h4><a class="anchor" name="keyboardbuttonrequestusers" href="#keyboardbuttonrequestusers"><i class="anchor-icon"></i></a>KeyboardButtonRequestUsers</h4><p>This object defines the criteria used to request suitable users. The identifiers of the selected users will be shared with the bot when the corresponding button is pressed. <a href="/bots/features#chat-and-user-selection">More about requesting users »</a></p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>request_id</td>
   <td>Integer</td>
   <td>Signed 32-bit identifier of the request that will be received back in the <a href="#usersshared">UsersShared</a> object. Must be unique within the message</td>
  </tr>
  <tr>
   <td>user_is_bot</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> to request bots, pass <em>False</em> to request regular users. If not specified, no additional restrictions are applied.</td>
  </tr>
  <tr>
   <td>user_is_premium</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> to request premium users, pass <em>False</em> to request non-premium users. If not specified, no additional restrictions are applied.</td>
  </tr>
  <tr>
   <td>max_quantity</td>
   <td>Integer</td>
   <td><em>Optional</em>. The maximum number of users to be selected; 1-10. Defaults to 1.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="keyboardbuttonrequestchat" href="#keyboardbuttonrequestchat"><i class="anchor-icon"></i></a>KeyboardButtonRequestChat</h4><p>This object defines the criteria used to request a suitable chat. The identifier of the selected chat will be shared with the bot when the corresponding button is pressed. <a href="/bots/features#chat-and-user-selection">More about requesting chats »</a></p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>request_id</td>
   <td>Integer</td>
   <td>Signed 32-bit identifier of the request, which will be received back in the <a href="#chatshared">ChatShared</a> object. Must be unique within the message</td>
  </tr>
  <tr>
   <td>chat_is_channel</td>
   <td>Boolean</td>
   <td>Pass <em>True</em> to request a channel chat, pass <em>False</em> to request a group or a supergroup chat.</td>
  </tr>
  <tr>
   <td>chat_is_forum</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> to request a forum supergroup, pass <em>False</em> to request a non-forum chat. If not specified, no additional restrictions are applied.</td>
  </tr>
  <tr>
   <td>chat_has_username</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> to request a supergroup or a channel with a username, pass <em>False</em> to request a chat without a username. If not specified, no additional restrictions are applied.</td>
  </tr>
  <tr>
   <td>chat_is_created</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> to request a chat owned by the user. Otherwise, no additional restrictions are applied.</td>
  </tr>
  <tr>
   <td>user_administrator_rights</td>
   <td><a href="#chatadministratorrights">ChatAdministratorRights</a></td>
   <td><em>Optional</em>. A JSON-serialized object listing the required administrator rights of the user in the chat. The rights must be a superset of <em>bot_administrator_rights</em>. If not specified, no additional restrictions are applied.</td>
  </tr>
  <tr>
   <td>bot_administrator_rights</td>
   <td><a href="#chatadministratorrights">ChatAdministratorRights</a></td>
   <td><em>Optional</em>. A JSON-serialized object listing the required administrator rights of the bot in the chat. The rights must be a subset of <em>user_administrator_rights</em>. If not specified, no additional restrictions are applied.</td>
  </tr>
  <tr>
   <td>bot_is_member</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> to request a chat with the bot as a member. Otherwise, no additional restrictions are applied.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="keyboardbuttonpolltype" href="#keyboardbuttonpolltype"><i class="anchor-icon"></i></a>KeyboardButtonPollType</h4><p>This object represents type of a poll, which is allowed to be created and sent when the corresponding button is pressed.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td><em>Optional</em>. If <em>quiz</em> is passed, the user will be allowed to create only polls in the quiz mode. If <em>regular</em> is passed, only regular polls will be allowed. Otherwise, the user will be allowed to create a poll of any type.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="replykeyboardremove" href="#replykeyboardremove"><i class="anchor-icon"></i></a>ReplyKeyboardRemove</h4><p>Upon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see <a href="#replykeyboardmarkup">ReplyKeyboardMarkup</a>).</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>remove_keyboard</td>
   <td>True</td>
   <td>Requests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use <em>one_time_keyboard</em> in <a href="#replykeyboardmarkup">ReplyKeyboardMarkup</a>)</td>
  </tr>
  <tr>
   <td>selective</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the <em>text</em> of the <a href="#message">Message</a> object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.<br><br><em>Example:</em> A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inlinekeyboardmarkup" href="#inlinekeyboardmarkup"><i class="anchor-icon"></i></a>InlineKeyboardMarkup</h4><p>This object represents an <a href="/bots/features#inline-keyboards">inline keyboard</a> that appears right next to the message it belongs to.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>inline_keyboard</td>
   <td>Array of Array of <a href="#inlinekeyboardbutton">InlineKeyboardButton</a></td>
   <td>Array of button rows, each represented by an Array of <a href="#inlinekeyboardbutton">InlineKeyboardButton</a> objects</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inlinekeyboardbutton" href="#inlinekeyboardbutton"><i class="anchor-icon"></i></a>InlineKeyboardButton</h4><p>This object represents one button of an inline keyboard. You <strong>must</strong> use exactly one of the optional fields.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>text</td>
   <td>String</td>
   <td>Label text on the button</td>
  </tr>
  <tr>
   <td>url</td>
   <td>String</td>
   <td><em>Optional</em>. HTTP or tg:// URL to be opened when the button is pressed. Links <code>tg://user?id=&lt;user_id&gt;</code> can be used to mention a user by their identifier without using a username, if this is allowed by their privacy settings.</td>
  </tr>
  <tr>
   <td>callback_data</td>
   <td>String</td>
   <td><em>Optional</em>. Data to be sent in a <a href="#callbackquery">callback query</a> to the bot when button is pressed, 1-64 bytes</td>
  </tr>
  <tr>
   <td>web_app</td>
   <td><a href="#webappinfo">WebAppInfo</a></td>
   <td><em>Optional</em>. Description of the <a href="/bots/webapps">Web App</a> that will be launched when the user presses the button. The Web App will be able to send an arbitrary message on behalf of the user using the method <a href="#answerwebappquery">answerWebAppQuery</a>. Available only in private chats between a user and the bot.</td>
  </tr>
  <tr>
   <td>login_url</td>
   <td><a href="#loginurl">LoginUrl</a></td>
   <td><em>Optional</em>. An HTTPS URL used to automatically authorize the user. Can be used as a replacement for the <a href="/widgets/login">Telegram Login Widget</a>.</td>
  </tr>
  <tr>
   <td>switch_inline_query</td>
   <td>String</td>
   <td><em>Optional</em>. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot's username and the specified inline query in the input field. May be empty, in which case just the bot's username will be inserted.</td>
  </tr>
  <tr>
   <td>switch_inline_query_current_chat</td>
   <td>String</td>
   <td><em>Optional</em>. If set, pressing the button will insert the bot's username and the specified inline query in the current chat's input field. May be empty, in which case only the bot's username will be inserted.<br><br>
    This offers a quick way for the user to open your bot in inline mode in the same chat - good for selecting something from multiple options.</td>
  </tr>
  <tr>
   <td>switch_inline_query_chosen_chat</td>
   <td><a href="#switchinlinequerychosenchat">SwitchInlineQueryChosenChat</a></td>
   <td><em>Optional</em>. If set, pressing the button will prompt the user to select one of their chats of the specified type, open that chat and insert the bot's username and the specified inline query in the input field</td>
  </tr>
  <tr>
   <td>callback_game</td>
   <td><a href="#callbackgame">CallbackGame</a></td>
   <td><em>Optional</em>. Description of the game that will be launched when the user presses the button.<br><br><strong>NOTE:</strong> This type of button <strong>must</strong> always be the first button in the first row.</td>
  </tr>
  <tr>
   <td>pay</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Specify <em>True</em>, to send a <a href="#payments">Pay button</a>.<br><br><strong>NOTE:</strong> This type of button <strong>must</strong> always be the first button in the first row and can only be used in invoice messages.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="loginurl" href="#loginurl"><i class="anchor-icon"></i></a>LoginUrl</h4><p>This object represents a parameter of the inline keyboard button used to automatically authorize a user. Serves as a great replacement for the <a href="/widgets/login">Telegram Login Widget</a> when the user is coming from Telegram. All the user needs to do is tap/click a button and confirm that they want to log in:</p><div class="blog_image_wrap">
 <a href="/file/811140015/1734/8VZFkwWXalM.97872/6127fa62d8a0bf2b3c" target="_blank"><img src="/file/811140909/1631/20k1Z53eiyY.23995/c541e89b74253623d9" title="TITLE" alt="TITLE" srcset="/file/811140015/1734/8VZFkwWXalM.97872/6127fa62d8a0bf2b3c , 2x"></a>
</div><p>Telegram apps support these buttons as of <a href="https://telegram.org/blog/privacy-discussions-web-bots#meet-seamless-web-bots">version 5.7</a>.</p><blockquote>
 <p>Sample bot: <a href="https://t.me/discussbot">@discussbot</a></p>
</blockquote><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>url</td>
   <td>String</td>
   <td>An HTTPS URL to be opened with user authorization data added to the query string when the button is pressed. If the user refuses to provide authorization data, the original URL without information about the user will be opened. The data added is the same as described in <a href="/widgets/login#receiving-authorization-data">Receiving authorization data</a>.<br><br><strong>NOTE:</strong> You <strong>must</strong> always check the hash of the received data to verify the authentication and the integrity of the data as described in <a href="/widgets/login#checking-authorization">Checking authorization</a>.</td>
  </tr>
  <tr>
   <td>forward_text</td>
   <td>String</td>
   <td><em>Optional</em>. New text of the button in forwarded messages.</td>
  </tr>
  <tr>
   <td>bot_username</td>
   <td>String</td>
   <td><em>Optional</em>. Username of a bot, which will be used for user authorization. See <a href="/widgets/login#setting-up-a-bot">Setting up a bot</a> for more details. If not specified, the current bot's username will be assumed. The <em>url</em>'s domain must be the same as the domain linked with the bot. See <a href="/widgets/login#linking-your-domain-to-the-bot">Linking your domain to the bot</a> for more details.</td>
  </tr>
  <tr>
   <td>request_write_access</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> to request the permission for your bot to send messages to the user.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="switchinlinequerychosenchat" href="#switchinlinequerychosenchat"><i class="anchor-icon"></i></a>SwitchInlineQueryChosenChat</h4><p>This object represents an inline button that switches the current user to inline mode in a chosen chat, with an optional default inline query.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>query</td>
   <td>String</td>
   <td><em>Optional</em>. The default inline query to be inserted in the input field. If left empty, only the bot's username will be inserted</td>
  </tr>
  <tr>
   <td>allow_user_chats</td>
   <td>Boolean</td>
   <td><em>Optional</em>. True, if private chats with users can be chosen</td>
  </tr>
  <tr>
   <td>allow_bot_chats</td>
   <td>Boolean</td>
   <td><em>Optional</em>. True, if private chats with bots can be chosen</td>
  </tr>
  <tr>
   <td>allow_group_chats</td>
   <td>Boolean</td>
   <td><em>Optional</em>. True, if group and supergroup chats can be chosen</td>
  </tr>
  <tr>
   <td>allow_channel_chats</td>
   <td>Boolean</td>
   <td><em>Optional</em>. True, if channel chats can be chosen</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="callbackquery" href="#callbackquery"><i class="anchor-icon"></i></a>CallbackQuery</h4><p>This object represents an incoming callback query from a callback button in an <a href="/bots/features#inline-keyboards">inline keyboard</a>. If the button that originated the query was attached to a message sent by the bot, the field <em>message</em> will be present. If the button was attached to a message sent via the bot (in <a href="#inline-mode">inline mode</a>), the field <em>inline_message_id</em> will be present. Exactly one of the fields <em>data</em> or <em>game_short_name</em> will be present.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>id</td>
   <td>String</td>
   <td>Unique identifier for this query</td>
  </tr>
  <tr>
   <td>from</td>
   <td><a href="#user">User</a></td>
   <td>Sender</td>
  </tr>
  <tr>
   <td>message</td>
   <td><a href="#maybeinaccessiblemessage">MaybeInaccessibleMessage</a></td>
   <td><em>Optional</em>. Message sent by the bot with the callback button that originated the query</td>
  </tr>
  <tr>
   <td>inline_message_id</td>
   <td>String</td>
   <td><em>Optional</em>. Identifier of the message sent via the bot in inline mode, that originated the query.</td>
  </tr>
  <tr>
   <td>chat_instance</td>
   <td>String</td>
   <td>Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in <a href="#games">games</a>.</td>
  </tr>
  <tr>
   <td>data</td>
   <td>String</td>
   <td><em>Optional</em>. Data associated with the callback button. Be aware that the message originated the query can contain no callback buttons with this data.</td>
  </tr>
  <tr>
   <td>game_short_name</td>
   <td>String</td>
   <td><em>Optional</em>. Short name of a <a href="#games">Game</a> to be returned, serves as the unique identifier for the game</td>
  </tr>
 </tbody>
</table><blockquote>
 <p><strong>NOTE:</strong> After the user presses a callback button, Telegram clients will display a progress bar until you call <a href="#answercallbackquery">answerCallbackQuery</a>. It is, therefore, necessary to react by calling <a href="#answercallbackquery">answerCallbackQuery</a> even if no notification to the user is needed (e.g., without specifying any of the optional parameters).</p>
</blockquote><h4><a class="anchor" name="forcereply" href="#forcereply"><i class="anchor-icon"></i></a>ForceReply</h4><p>Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot's message and tapped 'Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice <a href="/bots/features#privacy-mode">privacy mode</a>.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>force_reply</td>
   <td>True</td>
   <td>Shows reply interface to the user, as if they manually selected the bot's message and tapped 'Reply'</td>
  </tr>
  <tr>
   <td>input_field_placeholder</td>
   <td>String</td>
   <td><em>Optional</em>. The placeholder to be shown in the input field when the reply is active; 1-64 characters</td>
  </tr>
  <tr>
   <td>selective</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the <em>text</em> of the <a href="#message">Message</a> object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.</td>
  </tr>
 </tbody>
</table><blockquote>
 <p><strong>Example:</strong> A <a href="https://t.me/PollBot">poll bot</a> for groups runs in privacy mode (only receives commands, replies to its messages and mentions). There could be two ways to create a new poll:</p>
 <ul>
  <li>Explain the user how to send a command with parameters (e.g. /newpoll question answer1 answer2). May be appealing for hardcore users but lacks modern day polish.</li>
  <li>Guide the user through a step-by-step process. 'Please send me your question', 'Cool, now let's add the first answer option', 'Great. Keep adding answer options, then send /done when you're ready'.</li>
 </ul>
 <p>The last option is definitely more attractive. And if you use <a href="#forcereply">ForceReply</a> in your bot's questions, it will receive the user's answers even if it only receives replies, commands and mentions - without any extra work for the user.</p>
</blockquote><h4><a class="anchor" name="chatphoto" href="#chatphoto"><i class="anchor-icon"></i></a>ChatPhoto</h4><p>This object represents a chat photo.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>small_file_id</td>
   <td>String</td>
   <td>File identifier of small (160x160) chat photo. This file_id can be used only for photo download and only for as long as the photo is not changed.</td>
  </tr>
  <tr>
   <td>small_file_unique_id</td>
   <td>String</td>
   <td>Unique file identifier of small (160x160) chat photo, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
  <tr>
   <td>big_file_id</td>
   <td>String</td>
   <td>File identifier of big (640x640) chat photo. This file_id can be used only for photo download and only for as long as the photo is not changed.</td>
  </tr>
  <tr>
   <td>big_file_unique_id</td>
   <td>String</td>
   <td>Unique file identifier of big (640x640) chat photo, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatinvitelink" href="#chatinvitelink"><i class="anchor-icon"></i></a>ChatInviteLink</h4><p>Represents an invite link for a chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>invite_link</td>
   <td>String</td>
   <td>The invite link. If the link was created by another chat administrator, then the second part of the link will be replaced with “…”.</td>
  </tr>
  <tr>
   <td>creator</td>
   <td><a href="#user">User</a></td>
   <td>Creator of the link</td>
  </tr>
  <tr>
   <td>creates_join_request</td>
   <td>Boolean</td>
   <td><em>True</em>, if users joining the chat via the link need to be approved by chat administrators</td>
  </tr>
  <tr>
   <td>is_primary</td>
   <td>Boolean</td>
   <td><em>True</em>, if the link is primary</td>
  </tr>
  <tr>
   <td>is_revoked</td>
   <td>Boolean</td>
   <td><em>True</em>, if the link is revoked</td>
  </tr>
  <tr>
   <td>name</td>
   <td>String</td>
   <td><em>Optional</em>. Invite link name</td>
  </tr>
  <tr>
   <td>expire_date</td>
   <td>Integer</td>
   <td><em>Optional</em>. Point in time (Unix timestamp) when the link will expire or has been expired</td>
  </tr>
  <tr>
   <td>member_limit</td>
   <td>Integer</td>
   <td><em>Optional</em>. The maximum number of users that can be members of the chat simultaneously after joining the chat via this invite link; 1-99999</td>
  </tr>
  <tr>
   <td>pending_join_request_count</td>
   <td>Integer</td>
   <td><em>Optional</em>. Number of pending join requests created using this link</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatadministratorrights" href="#chatadministratorrights"><i class="anchor-icon"></i></a>ChatAdministratorRights</h4><p>Represents the rights of an administrator in a chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>is_anonymous</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user's presence in the chat is hidden</td>
  </tr>
  <tr>
   <td>can_manage_chat</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can access the chat event log, get boost list, see hidden supergroup and channel members, report spam messages and ignore slow mode. Implied by any other administrator privilege.</td>
  </tr>
  <tr>
   <td>can_delete_messages</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can delete messages of other users</td>
  </tr>
  <tr>
   <td>can_manage_video_chats</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can manage video chats</td>
  </tr>
  <tr>
   <td>can_restrict_members</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can restrict, ban or unban chat members, or access supergroup statistics</td>
  </tr>
  <tr>
   <td>can_promote_members</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can add new administrators with a subset of their own privileges or demote administrators that they have promoted, directly or indirectly (promoted by administrators that were appointed by the user)</td>
  </tr>
  <tr>
   <td>can_change_info</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to change the chat title, photo and other settings</td>
  </tr>
  <tr>
   <td>can_invite_users</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to invite new users to the chat</td>
  </tr>
  <tr>
   <td>can_post_stories</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can post stories to the chat</td>
  </tr>
  <tr>
   <td>can_edit_stories</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can edit stories posted by other users</td>
  </tr>
  <tr>
   <td>can_delete_stories</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can delete stories posted by other users</td>
  </tr>
  <tr>
   <td>can_post_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the administrator can post messages in the channel, or access channel statistics; for channels only</td>
  </tr>
  <tr>
   <td>can_edit_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the administrator can edit messages of other users and can pin messages; for channels only</td>
  </tr>
  <tr>
   <td>can_pin_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to pin messages; for groups and supergroups only</td>
  </tr>
  <tr>
   <td>can_manage_topics</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to create, rename, close, and reopen forum topics; for supergroups only</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatmemberupdated" href="#chatmemberupdated"><i class="anchor-icon"></i></a>ChatMemberUpdated</h4><p>This object represents changes in the status of a chat member.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Chat the user belongs to</td>
  </tr>
  <tr>
   <td>from</td>
   <td><a href="#user">User</a></td>
   <td>Performer of the action, which resulted in the change</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date the change was done in Unix time</td>
  </tr>
  <tr>
   <td>old_chat_member</td>
   <td><a href="#chatmember">ChatMember</a></td>
   <td>Previous information about the chat member</td>
  </tr>
  <tr>
   <td>new_chat_member</td>
   <td><a href="#chatmember">ChatMember</a></td>
   <td>New information about the chat member</td>
  </tr>
  <tr>
   <td>invite_link</td>
   <td><a href="#chatinvitelink">ChatInviteLink</a></td>
   <td><em>Optional</em>. Chat invite link, which was used by the user to join the chat; for joining by invite link events only.</td>
  </tr>
  <tr>
   <td>via_chat_folder_invite_link</td>
   <td>Boolean</td>
   <td><em>Optional</em>. True, if the user joined the chat via a chat folder invite link</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatmember" href="#chatmember"><i class="anchor-icon"></i></a>ChatMember</h4><p>This object contains information about one member of a chat. Currently, the following 6 types of chat members are supported:</p><ul>
 <li><a href="#chatmemberowner">ChatMemberOwner</a></li>
 <li><a href="#chatmemberadministrator">ChatMemberAdministrator</a></li>
 <li><a href="#chatmembermember">ChatMemberMember</a></li>
 <li><a href="#chatmemberrestricted">ChatMemberRestricted</a></li>
 <li><a href="#chatmemberleft">ChatMemberLeft</a></li>
 <li><a href="#chatmemberbanned">ChatMemberBanned</a></li>
</ul><h4><a class="anchor" name="chatmemberowner" href="#chatmemberowner"><i class="anchor-icon"></i></a>ChatMemberOwner</h4><p>Represents a <a href="#chatmember">chat member</a> that owns the chat and has all administrator privileges.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>status</td>
   <td>String</td>
   <td>The member's status in the chat, always “creator”</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td>Information about the user</td>
  </tr>
  <tr>
   <td>is_anonymous</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user's presence in the chat is hidden</td>
  </tr>
  <tr>
   <td>custom_title</td>
   <td>String</td>
   <td><em>Optional</em>. Custom title for this user</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatmemberadministrator" href="#chatmemberadministrator"><i class="anchor-icon"></i></a>ChatMemberAdministrator</h4><p>Represents a <a href="#chatmember">chat member</a> that has some additional privileges.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>status</td>
   <td>String</td>
   <td>The member's status in the chat, always “administrator”</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td>Information about the user</td>
  </tr>
  <tr>
   <td>can_be_edited</td>
   <td>Boolean</td>
   <td><em>True</em>, if the bot is allowed to edit administrator privileges of that user</td>
  </tr>
  <tr>
   <td>is_anonymous</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user's presence in the chat is hidden</td>
  </tr>
  <tr>
   <td>can_manage_chat</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can access the chat event log, get boost list, see hidden supergroup and channel members, report spam messages and ignore slow mode. Implied by any other administrator privilege.</td>
  </tr>
  <tr>
   <td>can_delete_messages</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can delete messages of other users</td>
  </tr>
  <tr>
   <td>can_manage_video_chats</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can manage video chats</td>
  </tr>
  <tr>
   <td>can_restrict_members</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can restrict, ban or unban chat members, or access supergroup statistics</td>
  </tr>
  <tr>
   <td>can_promote_members</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can add new administrators with a subset of their own privileges or demote administrators that they have promoted, directly or indirectly (promoted by administrators that were appointed by the user)</td>
  </tr>
  <tr>
   <td>can_change_info</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to change the chat title, photo and other settings</td>
  </tr>
  <tr>
   <td>can_invite_users</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to invite new users to the chat</td>
  </tr>
  <tr>
   <td>can_post_stories</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can post stories to the chat</td>
  </tr>
  <tr>
   <td>can_edit_stories</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can edit stories posted by other users</td>
  </tr>
  <tr>
   <td>can_delete_stories</td>
   <td>Boolean</td>
   <td><em>True</em>, if the administrator can delete stories posted by other users</td>
  </tr>
  <tr>
   <td>can_post_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the administrator can post messages in the channel, or access channel statistics; for channels only</td>
  </tr>
  <tr>
   <td>can_edit_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the administrator can edit messages of other users and can pin messages; for channels only</td>
  </tr>
  <tr>
   <td>can_pin_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to pin messages; for groups and supergroups only</td>
  </tr>
  <tr>
   <td>can_manage_topics</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to create, rename, close, and reopen forum topics; for supergroups only</td>
  </tr>
  <tr>
   <td>custom_title</td>
   <td>String</td>
   <td><em>Optional</em>. Custom title for this user</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatmembermember" href="#chatmembermember"><i class="anchor-icon"></i></a>ChatMemberMember</h4><p>Represents a <a href="#chatmember">chat member</a> that has no additional privileges or restrictions.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>status</td>
   <td>String</td>
   <td>The member's status in the chat, always “member”</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td>Information about the user</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatmemberrestricted" href="#chatmemberrestricted"><i class="anchor-icon"></i></a>ChatMemberRestricted</h4><p>Represents a <a href="#chatmember">chat member</a> that is under certain restrictions in the chat. Supergroups only.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>status</td>
   <td>String</td>
   <td>The member's status in the chat, always “restricted”</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td>Information about the user</td>
  </tr>
  <tr>
   <td>is_member</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is a member of the chat at the moment of the request</td>
  </tr>
  <tr>
   <td>can_send_messages</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send text messages, contacts, giveaways, giveaway winners, invoices, locations and venues</td>
  </tr>
  <tr>
   <td>can_send_audios</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send audios</td>
  </tr>
  <tr>
   <td>can_send_documents</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send documents</td>
  </tr>
  <tr>
   <td>can_send_photos</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send photos</td>
  </tr>
  <tr>
   <td>can_send_videos</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send videos</td>
  </tr>
  <tr>
   <td>can_send_video_notes</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send video notes</td>
  </tr>
  <tr>
   <td>can_send_voice_notes</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send voice notes</td>
  </tr>
  <tr>
   <td>can_send_polls</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send polls</td>
  </tr>
  <tr>
   <td>can_send_other_messages</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to send animations, games, stickers and use inline bots</td>
  </tr>
  <tr>
   <td>can_add_web_page_previews</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to add web page previews to their messages</td>
  </tr>
  <tr>
   <td>can_change_info</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to change the chat title, photo and other settings</td>
  </tr>
  <tr>
   <td>can_invite_users</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to invite new users to the chat</td>
  </tr>
  <tr>
   <td>can_pin_messages</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to pin messages</td>
  </tr>
  <tr>
   <td>can_manage_topics</td>
   <td>Boolean</td>
   <td><em>True</em>, if the user is allowed to create forum topics</td>
  </tr>
  <tr>
   <td>until_date</td>
   <td>Integer</td>
   <td>Date when restrictions will be lifted for this user; Unix time. If 0, then the user is restricted forever</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatmemberleft" href="#chatmemberleft"><i class="anchor-icon"></i></a>ChatMemberLeft</h4><p>Represents a <a href="#chatmember">chat member</a> that isn't currently a member of the chat, but may join it themselves.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>status</td>
   <td>String</td>
   <td>The member's status in the chat, always “left”</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td>Information about the user</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatmemberbanned" href="#chatmemberbanned"><i class="anchor-icon"></i></a>ChatMemberBanned</h4><p>Represents a <a href="#chatmember">chat member</a> that was banned in the chat and can't return to the chat or view chat messages.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>status</td>
   <td>String</td>
   <td>The member's status in the chat, always “kicked”</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td>Information about the user</td>
  </tr>
  <tr>
   <td>until_date</td>
   <td>Integer</td>
   <td>Date when restrictions will be lifted for this user; Unix time. If 0, then the user is banned forever</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatjoinrequest" href="#chatjoinrequest"><i class="anchor-icon"></i></a>ChatJoinRequest</h4><p>Represents a join request sent to a chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Chat to which the request was sent</td>
  </tr>
  <tr>
   <td>from</td>
   <td><a href="#user">User</a></td>
   <td>User that sent the join request</td>
  </tr>
  <tr>
   <td>user_chat_id</td>
   <td>Integer</td>
   <td>Identifier of a private chat with the user who sent the join request. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier. The bot can use this identifier for 5 minutes to send messages until the join request is processed, assuming no other administrator contacted the user.</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date the request was sent in Unix time</td>
  </tr>
  <tr>
   <td>bio</td>
   <td>String</td>
   <td><em>Optional</em>. Bio of the user.</td>
  </tr>
  <tr>
   <td>invite_link</td>
   <td><a href="#chatinvitelink">ChatInviteLink</a></td>
   <td><em>Optional</em>. Chat invite link that was used by the user to send the join request</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatpermissions" href="#chatpermissions"><i class="anchor-icon"></i></a>ChatPermissions</h4><p>Describes actions that a non-administrator user is allowed to take in a chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>can_send_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send text messages, contacts, giveaways, giveaway winners, invoices, locations and venues</td>
  </tr>
  <tr>
   <td>can_send_audios</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send audios</td>
  </tr>
  <tr>
   <td>can_send_documents</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send documents</td>
  </tr>
  <tr>
   <td>can_send_photos</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send photos</td>
  </tr>
  <tr>
   <td>can_send_videos</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send videos</td>
  </tr>
  <tr>
   <td>can_send_video_notes</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send video notes</td>
  </tr>
  <tr>
   <td>can_send_voice_notes</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send voice notes</td>
  </tr>
  <tr>
   <td>can_send_polls</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send polls</td>
  </tr>
  <tr>
   <td>can_send_other_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to send animations, games, stickers and use inline bots</td>
  </tr>
  <tr>
   <td>can_add_web_page_previews</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to add web page previews to their messages</td>
  </tr>
  <tr>
   <td>can_change_info</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to change the chat title, photo and other settings. Ignored in public supergroups</td>
  </tr>
  <tr>
   <td>can_invite_users</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to invite new users to the chat</td>
  </tr>
  <tr>
   <td>can_pin_messages</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to pin messages. Ignored in public supergroups</td>
  </tr>
  <tr>
   <td>can_manage_topics</td>
   <td>Boolean</td>
   <td><em>Optional</em>. <em>True</em>, if the user is allowed to create forum topics. If omitted defaults to the value of can_pin_messages</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatlocation" href="#chatlocation"><i class="anchor-icon"></i></a>ChatLocation</h4><p>Represents a location to which a chat is connected.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>location</td>
   <td><a href="#location">Location</a></td>
   <td>The location to which the supergroup is connected. Can't be a live location.</td>
  </tr>
  <tr>
   <td>address</td>
   <td>String</td>
   <td>Location address; 1-64 characters, as defined by the chat owner</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="reactiontype" href="#reactiontype"><i class="anchor-icon"></i></a>ReactionType</h4><p>This object describes the type of a reaction. Currently, it can be one of</p><ul>
 <li><a href="#reactiontypeemoji">ReactionTypeEmoji</a></li>
 <li><a href="#reactiontypecustomemoji">ReactionTypeCustomEmoji</a></li>
</ul><h4><a class="anchor" name="reactiontypeemoji" href="#reactiontypeemoji"><i class="anchor-icon"></i></a>ReactionTypeEmoji</h4><p>The reaction is based on an emoji.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the reaction, always “emoji”</td>
  </tr>
  <tr>
   <td>emoji</td>
   <td>String</td>
   <td>Reaction emoji. Currently, it can be one of "<img class="emoji" src="//telegram.org/img/emoji/40/F09F918D.png" width="20" height="20" alt="👍">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F918E.png" width="20" height="20" alt="👎">", "<img class="emoji" src="//telegram.org/img/emoji/40/E29DA4.png" width="20" height="20" alt="❤">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F94A5.png" width="20" height="20" alt="🔥">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA5B0.png" width="20" height="20" alt="🥰">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F918F.png" width="20" height="20" alt="👏">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9881.png" width="20" height="20" alt="😁">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA494.png" width="20" height="20" alt="🤔">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4AF.png" width="20" height="20" alt="🤯">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F98B1.png" width="20" height="20" alt="😱">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4AC.png" width="20" height="20" alt="🤬">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F98A2.png" width="20" height="20" alt="😢">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8E89.png" width="20" height="20" alt="🎉">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4A9.png" width="20" height="20" alt="🤩">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4AE.png" width="20" height="20" alt="🤮">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F92A9.png" width="20" height="20" alt="💩">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F998F.png" width="20" height="20" alt="🙏">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F918C.png" width="20" height="20" alt="👌">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F958A.png" width="20" height="20" alt="🕊">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4A1.png" width="20" height="20" alt="🤡">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA5B1.png" width="20" height="20" alt="🥱">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA5B4.png" width="20" height="20" alt="🥴">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F988D.png" width="20" height="20" alt="😍">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F90B3.png" width="20" height="20" alt="🐳">", "<img class="emoji" src="//telegram.org/img/emoji/40/E29DA4E2808DF09F94A5.png" width="20" height="20" alt="❤‍🔥">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8C9A.png" width="20" height="20" alt="🌚">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8CAD.png" width="20" height="20" alt="🌭">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F92AF.png" width="20" height="20" alt="💯">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4A3.png" width="20" height="20" alt="🤣">", "<img class="emoji" src="//telegram.org/img/emoji/40/E29AA1.png" width="20" height="20" alt="⚡">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8D8C.png" width="20" height="20" alt="🍌">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8F86.png" width="20" height="20" alt="🏆">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9294.png" width="20" height="20" alt="💔">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4A8.png" width="20" height="20" alt="🤨">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9890.png" width="20" height="20" alt="😐">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8D93.png" width="20" height="20" alt="🍓">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8DBE.png" width="20" height="20" alt="🍾">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F928B.png" width="20" height="20" alt="💋">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9695.png" width="20" height="20" alt="🖕">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9888.png" width="20" height="20" alt="😈">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F98B4.png" width="20" height="20" alt="😴">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F98AD.png" width="20" height="20" alt="😭">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA493.png" width="20" height="20" alt="🤓">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F91BB.png" width="20" height="20" alt="👻">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F91A8E2808DF09F92BB.png" width="20" height="20" alt="👨‍💻">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9180.png" width="20" height="20" alt="👀">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8E83.png" width="20" height="20" alt="🎃">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9988.png" width="20" height="20" alt="🙈">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9887.png" width="20" height="20" alt="😇">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F98A8.png" width="20" height="20" alt="😨">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA49D.png" width="20" height="20" alt="🤝">", "<img class="emoji" src="//telegram.org/img/emoji/40/E29C8D.png" width="20" height="20" alt="✍">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA497.png" width="20" height="20" alt="🤗">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FABA1.png" width="20" height="20" alt="🫡">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8E85.png" width="20" height="20" alt="🎅">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8E84.png" width="20" height="20" alt="🎄">", "<img class="emoji" src="//telegram.org/img/emoji/40/E29883.png" width="20" height="20" alt="☃">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9285.png" width="20" height="20" alt="💅">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4AA.png" width="20" height="20" alt="🤪">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F97BF.png" width="20" height="20" alt="🗿">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F8692.png" width="20" height="20" alt="🆒">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9298.png" width="20" height="20" alt="💘">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9989.png" width="20" height="20" alt="🙉">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA684.png" width="20" height="20" alt="🦄">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F9898.png" width="20" height="20" alt="😘">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F928A.png" width="20" height="20" alt="💊">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F998A.png" width="20" height="20" alt="🙊">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F988E.png" width="20" height="20" alt="😎">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F91BE.png" width="20" height="20" alt="👾">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4B7E2808DE29982.png" width="20" height="20" alt="🤷‍♂">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4B7.png" width="20" height="20" alt="🤷">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09FA4B7E2808DE29980.png" width="20" height="20" alt="🤷‍♀">", "<img class="emoji" src="//telegram.org/img/emoji/40/F09F98A1.png" width="20" height="20" alt="😡">"</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="reactiontypecustomemoji" href="#reactiontypecustomemoji"><i class="anchor-icon"></i></a>ReactionTypeCustomEmoji</h4><p>The reaction is based on a custom emoji.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the reaction, always “custom_emoji”</td>
  </tr>
  <tr>
   <td>custom_emoji_id</td>
   <td>String</td>
   <td>Custom emoji identifier</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="reactioncount" href="#reactioncount"><i class="anchor-icon"></i></a>ReactionCount</h4><p>Represents a reaction added to a message along with the number of times it was added.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td><a href="#reactiontype">ReactionType</a></td>
   <td>Type of the reaction</td>
  </tr>
  <tr>
   <td>total_count</td>
   <td>Integer</td>
   <td>Number of times the reaction was added</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="messagereactionupdated" href="#messagereactionupdated"><i class="anchor-icon"></i></a>MessageReactionUpdated</h4><p>This object represents a change of a reaction on a message performed by a user.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>The chat containing the message the user reacted to</td>
  </tr>
  <tr>
   <td>message_id</td>
   <td>Integer</td>
   <td>Unique identifier of the message inside the chat</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td><em>Optional</em>. The user that changed the reaction, if the user isn't anonymous</td>
  </tr>
  <tr>
   <td>actor_chat</td>
   <td><a href="#chat">Chat</a></td>
   <td><em>Optional</em>. The chat on behalf of which the reaction was changed, if the user is anonymous</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date of the change in Unix time</td>
  </tr>
  <tr>
   <td>old_reaction</td>
   <td>Array of <a href="#reactiontype">ReactionType</a></td>
   <td>Previous list of reaction types that were set by the user</td>
  </tr>
  <tr>
   <td>new_reaction</td>
   <td>Array of <a href="#reactiontype">ReactionType</a></td>
   <td>New list of reaction types that have been set by the user</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="messagereactioncountupdated" href="#messagereactioncountupdated"><i class="anchor-icon"></i></a>MessageReactionCountUpdated</h4><p>This object represents reaction changes on a message with anonymous reactions.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>The chat containing the message</td>
  </tr>
  <tr>
   <td>message_id</td>
   <td>Integer</td>
   <td>Unique message identifier inside the chat</td>
  </tr>
  <tr>
   <td>date</td>
   <td>Integer</td>
   <td>Date of the change in Unix time</td>
  </tr>
  <tr>
   <td>reactions</td>
   <td>Array of <a href="#reactioncount">ReactionCount</a></td>
   <td>List of reactions that are present on the message</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="forumtopic" href="#forumtopic"><i class="anchor-icon"></i></a>ForumTopic</h4><p>This object represents a forum topic.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>message_thread_id</td>
   <td>Integer</td>
   <td>Unique identifier of the forum topic</td>
  </tr>
  <tr>
   <td>name</td>
   <td>String</td>
   <td>Name of the topic</td>
  </tr>
  <tr>
   <td>icon_color</td>
   <td>Integer</td>
   <td>Color of the topic icon in RGB format</td>
  </tr>
  <tr>
   <td>icon_custom_emoji_id</td>
   <td>String</td>
   <td><em>Optional</em>. Unique identifier of the custom emoji shown as the topic icon</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botcommand" href="#botcommand"><i class="anchor-icon"></i></a>BotCommand</h4><p>This object represents a bot command.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>command</td>
   <td>String</td>
   <td>Text of the command; 1-32 characters. Can contain only lowercase English letters, digits and underscores.</td>
  </tr>
  <tr>
   <td>description</td>
   <td>String</td>
   <td>Description of the command; 1-256 characters.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botcommandscope" href="#botcommandscope"><i class="anchor-icon"></i></a>BotCommandScope</h4><p>This object represents the scope to which bot commands are applied. Currently, the following 7 scopes are supported:</p><ul>
 <li><a href="#botcommandscopedefault">BotCommandScopeDefault</a></li>
 <li><a href="#botcommandscopeallprivatechats">BotCommandScopeAllPrivateChats</a></li>
 <li><a href="#botcommandscopeallgroupchats">BotCommandScopeAllGroupChats</a></li>
 <li><a href="#botcommandscopeallchatadministrators">BotCommandScopeAllChatAdministrators</a></li>
 <li><a href="#botcommandscopechat">BotCommandScopeChat</a></li>
 <li><a href="#botcommandscopechatadministrators">BotCommandScopeChatAdministrators</a></li>
 <li><a href="#botcommandscopechatmember">BotCommandScopeChatMember</a></li>
</ul><h4><a class="anchor" name="determining-list-of-commands" href="#determining-list-of-commands"><i class="anchor-icon"></i></a>Determining list of commands</h4><p>The following algorithm is used to determine the list of commands for a particular user viewing the bot menu. The first list of commands which is set is returned:</p><p><strong>Commands in the chat with the bot</strong></p><ul>
 <li>botCommandScopeChat + language_code</li>
 <li>botCommandScopeChat</li>
 <li>botCommandScopeAllPrivateChats + language_code</li>
 <li>botCommandScopeAllPrivateChats</li>
 <li>botCommandScopeDefault + language_code</li>
 <li>botCommandScopeDefault</li>
</ul><p><strong>Commands in group and supergroup chats</strong></p><ul>
 <li>botCommandScopeChatMember + language_code</li>
 <li>botCommandScopeChatMember</li>
 <li>botCommandScopeChatAdministrators + language_code (administrators only)</li>
 <li>botCommandScopeChatAdministrators (administrators only)</li>
 <li>botCommandScopeChat + language_code</li>
 <li>botCommandScopeChat</li>
 <li>botCommandScopeAllChatAdministrators + language_code (administrators only)</li>
 <li>botCommandScopeAllChatAdministrators (administrators only)</li>
 <li>botCommandScopeAllGroupChats + language_code</li>
 <li>botCommandScopeAllGroupChats</li>
 <li>botCommandScopeDefault + language_code</li>
 <li>botCommandScopeDefault</li>
</ul><h4><a class="anchor" name="botcommandscopedefault" href="#botcommandscopedefault"><i class="anchor-icon"></i></a>BotCommandScopeDefault</h4><p>Represents the default <a href="#botcommandscope">scope</a> of bot commands. Default commands are used if no commands with a <a href="#determining-list-of-commands">narrower scope</a> are specified for the user.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Scope type, must be <em>default</em></td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botcommandscopeallprivatechats" href="#botcommandscopeallprivatechats"><i class="anchor-icon"></i></a>BotCommandScopeAllPrivateChats</h4><p>Represents the <a href="#botcommandscope">scope</a> of bot commands, covering all private chats.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Scope type, must be <em>all_private_chats</em></td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botcommandscopeallgroupchats" href="#botcommandscopeallgroupchats"><i class="anchor-icon"></i></a>BotCommandScopeAllGroupChats</h4><p>Represents the <a href="#botcommandscope">scope</a> of bot commands, covering all group and supergroup chats.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Scope type, must be <em>all_group_chats</em></td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botcommandscopeallchatadministrators" href="#botcommandscopeallchatadministrators"><i class="anchor-icon"></i></a>BotCommandScopeAllChatAdministrators</h4><p>Represents the <a href="#botcommandscope">scope</a> of bot commands, covering all group and supergroup chat administrators.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Scope type, must be <em>all_chat_administrators</em></td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botcommandscopechat" href="#botcommandscopechat"><i class="anchor-icon"></i></a>BotCommandScopeChat</h4><p>Represents the <a href="#botcommandscope">scope</a> of bot commands, covering a specific chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Scope type, must be <em>chat</em></td>
  </tr>
  <tr>
   <td>chat_id</td>
   <td>Integer or String</td>
   <td>Unique identifier for the target chat or username of the target supergroup (in the format <code>@supergroupusername</code>)</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botcommandscopechatadministrators" href="#botcommandscopechatadministrators"><i class="anchor-icon"></i></a>BotCommandScopeChatAdministrators</h4><p>Represents the <a href="#botcommandscope">scope</a> of bot commands, covering all administrators of a specific group or supergroup chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Scope type, must be <em>chat_administrators</em></td>
  </tr>
  <tr>
   <td>chat_id</td>
   <td>Integer or String</td>
   <td>Unique identifier for the target chat or username of the target supergroup (in the format <code>@supergroupusername</code>)</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botcommandscopechatmember" href="#botcommandscopechatmember"><i class="anchor-icon"></i></a>BotCommandScopeChatMember</h4><p>Represents the <a href="#botcommandscope">scope</a> of bot commands, covering a specific member of a group or supergroup chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Scope type, must be <em>chat_member</em></td>
  </tr>
  <tr>
   <td>chat_id</td>
   <td>Integer or String</td>
   <td>Unique identifier for the target chat or username of the target supergroup (in the format <code>@supergroupusername</code>)</td>
  </tr>
  <tr>
   <td>user_id</td>
   <td>Integer</td>
   <td>Unique identifier of the target user</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botname" href="#botname"><i class="anchor-icon"></i></a>BotName</h4><p>This object represents the bot's name.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>name</td>
   <td>String</td>
   <td>The bot's name</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botdescription" href="#botdescription"><i class="anchor-icon"></i></a>BotDescription</h4><p>This object represents the bot's description.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>description</td>
   <td>String</td>
   <td>The bot's description</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="botshortdescription" href="#botshortdescription"><i class="anchor-icon"></i></a>BotShortDescription</h4><p>This object represents the bot's short description.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>short_description</td>
   <td>String</td>
   <td>The bot's short description</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="menubutton" href="#menubutton"><i class="anchor-icon"></i></a>MenuButton</h4><p>This object describes the bot's menu button in a private chat. It should be one of</p><ul>
 <li><a href="#menubuttoncommands">MenuButtonCommands</a></li>
 <li><a href="#menubuttonwebapp">MenuButtonWebApp</a></li>
 <li><a href="#menubuttondefault">MenuButtonDefault</a></li>
</ul><p>If a menu button other than <a href="#menubuttondefault">MenuButtonDefault</a> is set for a private chat, then it is applied in the chat. Otherwise the default menu button is applied. By default, the menu button opens the list of bot commands.</p><h4><a class="anchor" name="menubuttoncommands" href="#menubuttoncommands"><i class="anchor-icon"></i></a>MenuButtonCommands</h4><p>Represents a menu button, which opens the bot's list of commands.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the button, must be <em>commands</em></td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="menubuttonwebapp" href="#menubuttonwebapp"><i class="anchor-icon"></i></a>MenuButtonWebApp</h4><p>Represents a menu button, which launches a <a href="/bots/webapps">Web App</a>.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the button, must be <em>web_app</em></td>
  </tr>
  <tr>
   <td>text</td>
   <td>String</td>
   <td>Text on the button</td>
  </tr>
  <tr>
   <td>web_app</td>
   <td><a href="#webappinfo">WebAppInfo</a></td>
   <td>Description of the Web App that will be launched when the user presses the button. The Web App will be able to send an arbitrary message on behalf of the user using the method <a href="#answerwebappquery">answerWebAppQuery</a>.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="menubuttondefault" href="#menubuttondefault"><i class="anchor-icon"></i></a>MenuButtonDefault</h4><p>Describes that no specific value for the menu button was set.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the button, must be <em>default</em></td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatboostsource" href="#chatboostsource"><i class="anchor-icon"></i></a>ChatBoostSource</h4><p>This object describes the source of a chat boost. It can be one of</p><ul>
 <li><a href="#chatboostsourcepremium">ChatBoostSourcePremium</a></li>
 <li><a href="#chatboostsourcegiftcode">ChatBoostSourceGiftCode</a></li>
 <li><a href="#chatboostsourcegiveaway">ChatBoostSourceGiveaway</a></li>
</ul><h4><a class="anchor" name="chatboostsourcepremium" href="#chatboostsourcepremium"><i class="anchor-icon"></i></a>ChatBoostSourcePremium</h4><p>The boost was obtained by subscribing to Telegram Premium or by gifting a Telegram Premium subscription to another user.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>source</td>
   <td>String</td>
   <td>Source of the boost, always “premium”</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td>User that boosted the chat</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatboostsourcegiftcode" href="#chatboostsourcegiftcode"><i class="anchor-icon"></i></a>ChatBoostSourceGiftCode</h4><p>The boost was obtained by the creation of Telegram Premium gift codes to boost a chat. Each such code boosts the chat 4 times for the duration of the corresponding Telegram Premium subscription.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>source</td>
   <td>String</td>
   <td>Source of the boost, always “gift_code”</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td>User for which the gift code was created</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatboostsourcegiveaway" href="#chatboostsourcegiveaway"><i class="anchor-icon"></i></a>ChatBoostSourceGiveaway</h4><p>The boost was obtained by the creation of a Telegram Premium giveaway. This boosts the chat 4 times for the duration of the corresponding Telegram Premium subscription.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>source</td>
   <td>String</td>
   <td>Source of the boost, always “giveaway”</td>
  </tr>
  <tr>
   <td>giveaway_message_id</td>
   <td>Integer</td>
   <td>Identifier of a message in the chat with the giveaway; the message could have been deleted already. May be 0 if the message isn't sent yet.</td>
  </tr>
  <tr>
   <td>user</td>
   <td><a href="#user">User</a></td>
   <td><em>Optional</em>. User that won the prize in the giveaway if any</td>
  </tr>
  <tr>
   <td>is_unclaimed</td>
   <td>True</td>
   <td><em>Optional</em>. True, if the giveaway was completed, but there was no user to win the prize</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatboost" href="#chatboost"><i class="anchor-icon"></i></a>ChatBoost</h4><p>This object contains information about a chat boost.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>boost_id</td>
   <td>String</td>
   <td>Unique identifier of the boost</td>
  </tr>
  <tr>
   <td>add_date</td>
   <td>Integer</td>
   <td>Point in time (Unix timestamp) when the chat was boosted</td>
  </tr>
  <tr>
   <td>expiration_date</td>
   <td>Integer</td>
   <td>Point in time (Unix timestamp) when the boost will automatically expire, unless the booster's Telegram Premium subscription is prolonged</td>
  </tr>
  <tr>
   <td>source</td>
   <td><a href="#chatboostsource">ChatBoostSource</a></td>
   <td>Source of the added boost</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatboostupdated" href="#chatboostupdated"><i class="anchor-icon"></i></a>ChatBoostUpdated</h4><p>This object represents a boost added to a chat or changed.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Chat which was boosted</td>
  </tr>
  <tr>
   <td>boost</td>
   <td><a href="#chatboost">ChatBoost</a></td>
   <td>Information about the chat boost</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="chatboostremoved" href="#chatboostremoved"><i class="anchor-icon"></i></a>ChatBoostRemoved</h4><p>This object represents a boost removed from a chat.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>chat</td>
   <td><a href="#chat">Chat</a></td>
   <td>Chat which was boosted</td>
  </tr>
  <tr>
   <td>boost_id</td>
   <td>String</td>
   <td>Unique identifier of the boost</td>
  </tr>
  <tr>
   <td>remove_date</td>
   <td>Integer</td>
   <td>Point in time (Unix timestamp) when the boost was removed</td>
  </tr>
  <tr>
   <td>source</td>
   <td><a href="#chatboostsource">ChatBoostSource</a></td>
   <td>Source of the removed boost</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="userchatboosts" href="#userchatboosts"><i class="anchor-icon"></i></a>UserChatBoosts</h4><p>This object represents a list of boosts added to a chat by a user.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>boosts</td>
   <td>Array of <a href="#chatboost">ChatBoost</a></td>
   <td>The list of boosts added to the chat by the user</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="responseparameters" href="#responseparameters"><i class="anchor-icon"></i></a>ResponseParameters</h4><p>Describes why a request was unsuccessful.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>migrate_to_chat_id</td>
   <td>Integer</td>
   <td><em>Optional</em>. The group has been migrated to a supergroup with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.</td>
  </tr>
  <tr>
   <td>retry_after</td>
   <td>Integer</td>
   <td><em>Optional</em>. In case of exceeding flood control, the number of seconds left to wait before the request can be repeated</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inputmedia" href="#inputmedia"><i class="anchor-icon"></i></a>InputMedia</h4><p>This object represents the content of a media message to be sent. It should be one of</p><ul>
 <li><a href="#inputmediaanimation">InputMediaAnimation</a></li>
 <li><a href="#inputmediadocument">InputMediaDocument</a></li>
 <li><a href="#inputmediaaudio">InputMediaAudio</a></li>
 <li><a href="#inputmediaphoto">InputMediaPhoto</a></li>
 <li><a href="#inputmediavideo">InputMediaVideo</a></li>
</ul><h4><a class="anchor" name="inputmediaphoto" href="#inputmediaphoto"><i class="anchor-icon"></i></a>InputMediaPhoto</h4><p>Represents a photo to be sent.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the result, must be <em>photo</em></td>
  </tr>
  <tr>
   <td>media</td>
   <td>String</td>
   <td>File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://&lt;file_attach_name&gt;” to upload a new one using multipart/form-data under &lt;file_attach_name&gt; name. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>caption</td>
   <td>String</td>
   <td><em>Optional</em>. Caption of the photo to be sent, 0-1024 characters after entities parsing</td>
  </tr>
  <tr>
   <td>parse_mode</td>
   <td>String</td>
   <td><em>Optional</em>. Mode for parsing entities in the photo caption. See <a href="#formatting-options">formatting options</a> for more details.</td>
  </tr>
  <tr>
   <td>caption_entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. List of special entities that appear in the caption, which can be specified instead of <em>parse_mode</em></td>
  </tr>
  <tr>
   <td>has_spoiler</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> if the photo needs to be covered with a spoiler animation</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inputmediavideo" href="#inputmediavideo"><i class="anchor-icon"></i></a>InputMediaVideo</h4><p>Represents a video to be sent.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the result, must be <em>video</em></td>
  </tr>
  <tr>
   <td>media</td>
   <td>String</td>
   <td>File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://&lt;file_attach_name&gt;” to upload a new one using multipart/form-data under &lt;file_attach_name&gt; name. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#inputfile">InputFile</a> or String</td>
   <td><em>Optional</em>. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass “attach://&lt;file_attach_name&gt;” if the thumbnail was uploaded using multipart/form-data under &lt;file_attach_name&gt;. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>caption</td>
   <td>String</td>
   <td><em>Optional</em>. Caption of the video to be sent, 0-1024 characters after entities parsing</td>
  </tr>
  <tr>
   <td>parse_mode</td>
   <td>String</td>
   <td><em>Optional</em>. Mode for parsing entities in the video caption. See <a href="#formatting-options">formatting options</a> for more details.</td>
  </tr>
  <tr>
   <td>caption_entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. List of special entities that appear in the caption, which can be specified instead of <em>parse_mode</em></td>
  </tr>
  <tr>
   <td>width</td>
   <td>Integer</td>
   <td><em>Optional</em>. Video width</td>
  </tr>
  <tr>
   <td>height</td>
   <td>Integer</td>
   <td><em>Optional</em>. Video height</td>
  </tr>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td><em>Optional</em>. Video duration in seconds</td>
  </tr>
  <tr>
   <td>supports_streaming</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> if the uploaded video is suitable for streaming</td>
  </tr>
  <tr>
   <td>has_spoiler</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> if the video needs to be covered with a spoiler animation</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inputmediaanimation" href="#inputmediaanimation"><i class="anchor-icon"></i></a>InputMediaAnimation</h4><p>Represents an animation file (GIF or H.264/MPEG-4 AVC video without sound) to be sent.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the result, must be <em>animation</em></td>
  </tr>
  <tr>
   <td>media</td>
   <td>String</td>
   <td>File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://&lt;file_attach_name&gt;” to upload a new one using multipart/form-data under &lt;file_attach_name&gt; name. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#inputfile">InputFile</a> or String</td>
   <td><em>Optional</em>. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass “attach://&lt;file_attach_name&gt;” if the thumbnail was uploaded using multipart/form-data under &lt;file_attach_name&gt;. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>caption</td>
   <td>String</td>
   <td><em>Optional</em>. Caption of the animation to be sent, 0-1024 characters after entities parsing</td>
  </tr>
  <tr>
   <td>parse_mode</td>
   <td>String</td>
   <td><em>Optional</em>. Mode for parsing entities in the animation caption. See <a href="#formatting-options">formatting options</a> for more details.</td>
  </tr>
  <tr>
   <td>caption_entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. List of special entities that appear in the caption, which can be specified instead of <em>parse_mode</em></td>
  </tr>
  <tr>
   <td>width</td>
   <td>Integer</td>
   <td><em>Optional</em>. Animation width</td>
  </tr>
  <tr>
   <td>height</td>
   <td>Integer</td>
   <td><em>Optional</em>. Animation height</td>
  </tr>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td><em>Optional</em>. Animation duration in seconds</td>
  </tr>
  <tr>
   <td>has_spoiler</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Pass <em>True</em> if the animation needs to be covered with a spoiler animation</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inputmediaaudio" href="#inputmediaaudio"><i class="anchor-icon"></i></a>InputMediaAudio</h4><p>Represents an audio file to be treated as music to be sent.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the result, must be <em>audio</em></td>
  </tr>
  <tr>
   <td>media</td>
   <td>String</td>
   <td>File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://&lt;file_attach_name&gt;” to upload a new one using multipart/form-data under &lt;file_attach_name&gt; name. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#inputfile">InputFile</a> or String</td>
   <td><em>Optional</em>. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass “attach://&lt;file_attach_name&gt;” if the thumbnail was uploaded using multipart/form-data under &lt;file_attach_name&gt;. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>caption</td>
   <td>String</td>
   <td><em>Optional</em>. Caption of the audio to be sent, 0-1024 characters after entities parsing</td>
  </tr>
  <tr>
   <td>parse_mode</td>
   <td>String</td>
   <td><em>Optional</em>. Mode for parsing entities in the audio caption. See <a href="#formatting-options">formatting options</a> for more details.</td>
  </tr>
  <tr>
   <td>caption_entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. List of special entities that appear in the caption, which can be specified instead of <em>parse_mode</em></td>
  </tr>
  <tr>
   <td>duration</td>
   <td>Integer</td>
   <td><em>Optional</em>. Duration of the audio in seconds</td>
  </tr>
  <tr>
   <td>performer</td>
   <td>String</td>
   <td><em>Optional</em>. Performer of the audio</td>
  </tr>
  <tr>
   <td>title</td>
   <td>String</td>
   <td><em>Optional</em>. Title of the audio</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inputmediadocument" href="#inputmediadocument"><i class="anchor-icon"></i></a>InputMediaDocument</h4><p>Represents a general file to be sent.</p><table class="table">
 <thead>
  <tr>
   <th>Field</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>type</td>
   <td>String</td>
   <td>Type of the result, must be <em>document</em></td>
  </tr>
  <tr>
   <td>media</td>
   <td>String</td>
   <td>File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://&lt;file_attach_name&gt;” to upload a new one using multipart/form-data under &lt;file_attach_name&gt; name. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>thumbnail</td>
   <td><a href="#inputfile">InputFile</a> or String</td>
   <td><em>Optional</em>. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass “attach://&lt;file_attach_name&gt;” if the thumbnail was uploaded using multipart/form-data under &lt;file_attach_name&gt;. <a href="#sending-files">More information on Sending Files »</a></td>
  </tr>
  <tr>
   <td>caption</td>
   <td>String</td>
   <td><em>Optional</em>. Caption of the document to be sent, 0-1024 characters after entities parsing</td>
  </tr>
  <tr>
   <td>parse_mode</td>
   <td>String</td>
   <td><em>Optional</em>. Mode for parsing entities in the document caption. See <a href="#formatting-options">formatting options</a> for more details.</td>
  </tr>
  <tr>
   <td>caption_entities</td>
   <td>Array of <a href="#messageentity">MessageEntity</a></td>
   <td><em>Optional</em>. List of special entities that appear in the caption, which can be specified instead of <em>parse_mode</em></td>
  </tr>
  <tr>
   <td>disable_content_type_detection</td>
   <td>Boolean</td>
   <td><em>Optional</em>. Disables automatic server-side content type detection for files uploaded using multipart/form-data. Always <em>True</em>, if the document is sent as part of an album.</td>
  </tr>
 </tbody>
</table><h4><a class="anchor" name="inputfile" href="#inputfile"><i class="anchor-icon"></i></a>InputFile</h4><p>This object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.</p><h4><a class="anchor" name="sending-files" href="#sending-files"><i class="anchor-icon"></i></a>Sending files</h4><p>There are three ways to send files (photos, stickers, audio, media, etc.):</p><ol>
 <li>If the file is already stored somewhere on the Telegram servers, you don't need to reupload it: each file object has a <strong>file_id</strong> field, simply pass this <strong>file_id</strong> as a parameter instead of uploading. There are <strong>no limits</strong> for files sent this way.</li>
 <li>Provide Telegram with an HTTP URL for the file to be sent. Telegram will download and send the file. 5 MB max size for photos and 20 MB max for other types of content.</li>
 <li>Post the file using multipart/form-data in the usual way that files are uploaded via the browser. 10 MB max size for photos, 50 MB for other files.</li>
</ol><p><strong>Sending by file_id</strong></p><ul>
 <li>It is not possible to change the file type when resending by <strong>file_id</strong>. I.e. a <a href="#video">video</a> can't be <a href="#sendphoto">sent as a photo</a>, a <a href="#photosize">photo</a> can't be <a href="#senddocument">sent as a document</a>, etc.</li>
 <li>It is not possible to resend thumbnails.</li>
 <li>Resending a photo by <strong>file_id</strong> will send all of its <a href="#photosize">sizes</a>.</li>
 <li><strong>file_id</strong> is unique for each individual bot and <strong>can't</strong> be transferred from one bot to another.</li>
 <li><strong>file_id</strong> uniquely identifies a file, but a file can have different valid <strong>file_id</strong>s even for the same bot.</li>
</ul><p><strong>Sending by URL</strong></p><ul>
 <li>When sending by URL the target file must have the correct MIME type (e.g., audio/mpeg for <a href="#sendaudio">sendAudio</a>, etc.).</li>
 <li>In <a href="#senddocument">sendDocument</a>, sending by URL will currently only work for <strong>GIF</strong>, <strong>PDF</strong> and <strong>ZIP</strong> files.</li>
 <li>To use <a href="#sendvoice">sendVoice</a>, the file must have the type audio/ogg and be no more than 1MB in size. 1-20MB voice notes will be sent as files.</li>
 <li>Other configurations may work but we can't guarantee that they will.</li>
</ul><h4><a class="anchor" name="accent-colors" href="#accent-colors"><i class="anchor-icon"></i></a>Accent colors</h4><p>Colors with identifiers 0 (red), 1 (orange), 2 (purple/violet), 3 (green), 4 (cyan), 5 (blue), 6 (pink) can be customized by app themes. Additionally, the following colors in RGB format are currently in use.</p><p></p><table class="table table-hover table-bordered">
 <thead>
  <tr>
   <th>Color identifier</th>
   <th>Light colors</th>
   <th>Dark colors</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>7</td>
   <td>E15052 F9AE63</td>
   <td>FF9380 992F37</td>
  </tr>
  <tr>
   <td>8</td>
   <td>E0802B FAC534</td>
   <td>ECB04E C35714</td>
  </tr>
  <tr>
   <td>9</td>
   <td>A05FF3 F48FFF</td>
   <td>C697FF 5E31C8</td>
  </tr>
  <tr>
   <td>10</td>
   <td>27A910 A7DC57</td>
   <td>A7EB6E 167E2D</td>
  </tr>
  <tr>
   <td>11</td>
   <td>27ACCE 82E8D6</td>
   <td>40D8D0 045C7F</td>
  </tr>
  <tr>
   <td>12</td>
   <td>3391D4 7DD3F0</td>
   <td>52BFFF 0B5494</td>
  </tr>
  <tr>
   <td>13</td>
   <td>DD4371 FFBE9F</td>
   <td>FF86A6 8E366E</td>
  </tr>
  <tr>
   <td>14</td>
   <td>247BED F04856 FFFFFF</td>
   <td>3FA2FE E5424F FFFFFF</td>
  </tr>
  <tr>
   <td>15</td>
   <td>D67722 1EA011 FFFFFF</td>
   <td>FF905E 32A527 FFFFFF</td>
  </tr>
  <tr>
   <td>16</td>
   <td>179E42 E84A3F FFFFFF</td>
   <td>66D364 D5444F FFFFFF</td>
  </tr>
  <tr>
   <td>17</td>
   <td>2894AF 6FC456 FFFFFF</td>
   <td>22BCE2 3DA240 FFFFFF</td>
  </tr>
  <tr>
   <td>18</td>
   <td>0C9AB3 FFAD95 FFE6B5</td>
   <td>22BCE2 FF9778 FFDA6B</td>
  </tr>
  <tr>
   <td>19</td>
   <td>7757D6 F79610 FFDE8E</td>
   <td>9791FF F2731D FFDB59</td>
  </tr>
  <tr>
   <td>20</td>
   <td>1585CF F2AB1D FFFFFF</td>
   <td>3DA6EB EEA51D FFFFFF</td>
  </tr>
 </tbody>
</table><p></p><h4><a class="anchor" name="profile-accent-colors" href="#profile-accent-colors"><i class="anchor-icon"></i></a>Profile accent colors</h4><p>Currently, the following colors in RGB format are in use for profile backgrounds.</p><p></p><table class="table table-hover table-bordered">
 <thead>
  <tr>
   <th>Color identifier</th>
   <th>Light colors</th>
   <th>Dark colors</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td>0</td>
   <td>BA5650</td>
   <td>9C4540</td>
  </tr>
  <tr>
   <td>1</td>
   <td>C27C3E</td>
   <td>945E2C</td>
  </tr>
  <tr>
   <td>2</td>
   <td>956AC8</td>
   <td>715099</td>
  </tr>
  <tr>
   <td>3</td>
   <td>49A355</td>
   <td>33713B</td>
  </tr>
  <tr>
   <td>4</td>
   <td>3E97AD</td>
   <td>387E87</td>
  </tr>
  <tr>
   <td>5</td>
   <td>5A8FBB</td>
   <td>477194</td>
  </tr>
  <tr>
   <td>6</td>
   <td>B85378</td>
   <td>944763</td>
  </tr>
  <tr>
   <td>7</td>
   <td>7F8B95</td>
   <td>435261</td>
  </tr>
  <tr>
   <td>8</td>
   <td>C9565D D97C57</td>
   <td>994343 AC583E</td>
  </tr>
  <tr>
   <td>9</td>
   <td>CF7244 CC9433</td>
   <td>8F552F A17232</td>
  </tr>
  <tr>
   <td>10</td>
   <td>9662D4 B966B6</td>
   <td>634691 9250A2</td>
  </tr>
  <tr>
   <td>11</td>
   <td>3D9755 89A650</td>
   <td>296A43 5F8F44</td>
  </tr>
  <tr>
   <td>12</td>
   <td>3D95BA 50AD98</td>
   <td>306C7C 3E987E</td>
  </tr>
  <tr>
   <td>13</td>
   <td>538BC2 4DA8BD</td>
   <td>38618C 458BA1</td>
  </tr>
  <tr>
   <td>14</td>
   <td>B04F74 D1666D</td>
   <td>884160 A65259</td>
  </tr>
  <tr>
   <td>15</td>
   <td>637482 7B8A97</td>
   <td>53606E 384654</td>
  </tr>
 </tbody>
</table><p></p><h4><a class="anchor" name="inline-mode-objects" href="#inline-mode-objects"><i class="anchor-icon"></i></a>Inline mode objects</h4><p>Objects and methods used in the inline mode are described in the <a href="#inline-mode">Inline mode section</a>.</p>
