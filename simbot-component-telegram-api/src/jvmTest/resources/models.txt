Chat
This object represents a chat.

Field	Type	Description
id	Integer	Unique identifier for this chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.
type	String	Type of chat, can be either “private”, “group”, “supergroup” or “channel”
title	String	Optional. Title, for supergroups, channels and group chats
username	String	Optional. Username, for private chats, supergroups and channels if available
first_name	String	Optional. First name of the other party in a private chat
last_name	String	Optional. Last name of the other party in a private chat
is_forum	True	Optional. True, if the supergroup chat is a forum (has topics enabled)
photo	ChatPhoto	Optional. Chat photo. Returned only in getChat.
active_usernames	Array of String	Optional. If non-empty, the list of all active chat usernames; for private chats, supergroups and channels. Returned only in getChat.
available_reactions	Array of ReactionType	Optional. List of available reactions allowed in the chat. If omitted, then all emoji reactions are allowed. Returned only in getChat.
accent_color_id	Integer	Optional. Identifier of the accent color for the chat name and backgrounds of the chat photo, reply header, and link preview. See accent colors for more details. Returned only in getChat. Always returned in getChat.
background_custom_emoji_id	String	Optional. Custom emoji identifier of emoji chosen by the chat for the reply header and link preview background. Returned only in getChat.
profile_accent_color_id	Integer	Optional. Identifier of the accent color for the chat's profile background. See profile accent colors for more details. Returned only in getChat.
profile_background_custom_emoji_id	String	Optional. Custom emoji identifier of the emoji chosen by the chat for its profile background. Returned only in getChat.
emoji_status_custom_emoji_id	String	Optional. Custom emoji identifier of the emoji status of the chat or the other party in a private chat. Returned only in getChat.
emoji_status_expiration_date	Integer	Optional. Expiration date of the emoji status of the chat or the other party in a private chat, in Unix time, if any. Returned only in getChat.
bio	String	Optional. Bio of the other party in a private chat. Returned only in getChat.
has_private_forwards	True	Optional. True, if privacy settings of the other party in the private chat allows to use tg://user?id=<user_id> links only in chats with the user. Returned only in getChat.
has_restricted_voice_and_video_messages	True	Optional. True, if the privacy settings of the other party restrict sending voice and video note messages in the private chat. Returned only in getChat.
join_to_send_messages	True	Optional. True, if users need to join the supergroup before they can send messages. Returned only in getChat.
join_by_request	True	Optional. True, if all users directly joining the supergroup need to be approved by supergroup administrators. Returned only in getChat.
description	String	Optional. Description, for groups, supergroups and channel chats. Returned only in getChat.
invite_link	String	Optional. Primary invite link, for groups, supergroups and channel chats. Returned only in getChat.
pinned_message	Message	Optional. The most recent pinned message (by sending date). Returned only in getChat.
permissions	ChatPermissions	Optional. Default chat member permissions, for groups and supergroups. Returned only in getChat.
slow_mode_delay	Integer	Optional. For supergroups, the minimum allowed delay between consecutive messages sent by each unprivileged user; in seconds. Returned only in getChat.
unrestrict_boost_count	Integer	Optional. For supergroups, the minimum number of boosts that a non-administrator user needs to add in order to ignore slow mode and chat permissions. Returned only in getChat.
message_auto_delete_time	Integer	Optional. The time after which all messages sent to the chat will be automatically deleted; in seconds. Returned only in getChat.
has_aggressive_anti_spam_enabled	True	Optional. True, if aggressive anti-spam checks are enabled in the supergroup. The field is only available to chat administrators. Returned only in getChat.
has_hidden_members	True	Optional. True, if non-administrators can only get the list of bots and administrators in the chat. Returned only in getChat.
has_protected_content	True	Optional. True, if messages from the chat can't be forwarded to other chats. Returned only in getChat.
has_visible_history	True	Optional. True, if new chat members will have access to old messages; available only to chat administrators. Returned only in getChat.
sticker_set_name	String	Optional. For supergroups, name of group sticker set. Returned only in getChat.
can_set_sticker_set	True	Optional. True, if the bot can change the group sticker set. Returned only in getChat.
custom_emoji_sticker_set_name	String	Optional. For supergroups, the name of the group's custom emoji sticker set. Custom emoji from this set can be used by all users and bots in the group. Returned only in getChat.
linked_chat_id	Integer	Optional. Unique identifier for the linked chat, i.e. the discussion group identifier for a channel and vice versa; for supergroups and channel chats. This identifier may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier. Returned only in getChat.
location	ChatLocation	Optional. For supergroups, the location to which the supergroup is connected. Returned only in getChat.
Message
This object represents a message.

Field	Type	Description
message_id	Integer	Unique message identifier inside this chat
message_thread_id	Integer	Optional. Unique identifier of a message thread to which the message belongs; for supergroups only
from	User	Optional. Sender of the message; empty for messages sent to channels. For backward compatibility, the field contains a fake sender user in non-channel chats, if the message was sent on behalf of a chat.
sender_chat	Chat	Optional. Sender of the message, sent on behalf of a chat. For example, the channel itself for channel posts, the supergroup itself for messages from anonymous group administrators, the linked channel for messages automatically forwarded to the discussion group. For backward compatibility, the field from contains a fake sender user in non-channel chats, if the message was sent on behalf of a chat.
sender_boost_count	Integer	Optional. If the sender of the message boosted the chat, the number of boosts added by the user
date	Integer	Date the message was sent in Unix time. It is always a positive number, representing a valid date.
chat	Chat	Chat the message belongs to
forward_origin	MessageOrigin	Optional. Information about the original message for forwarded messages
is_topic_message	True	Optional. True, if the message is sent to a forum topic
is_automatic_forward	True	Optional. True, if the message is a channel post that was automatically forwarded to the connected discussion group
reply_to_message	Message	Optional. For replies in the same chat and message thread, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.
external_reply	ExternalReplyInfo	Optional. Information about the message that is being replied to, which may come from another chat or forum topic
quote	TextQuote	Optional. For replies that quote part of the original message, the quoted part of the message
reply_to_story	Story	Optional. For replies to a story, the original story
via_bot	User	Optional. Bot through which the message was sent
edit_date	Integer	Optional. Date the message was last edited in Unix time
has_protected_content	True	Optional. True, if the message can't be forwarded
media_group_id	String	Optional. The unique identifier of a media message group this message belongs to
author_signature	String	Optional. Signature of the post author for messages in channels, or the custom title of an anonymous group administrator
text	String	Optional. For text messages, the actual UTF-8 text of the message
entities	Array of MessageEntity	Optional. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text
link_preview_options	LinkPreviewOptions	Optional. Options used for link preview generation for the message, if it is a text message and link preview options were changed
animation	Animation	Optional. Message is an animation, information about the animation. For backward compatibility, when this field is set, the document field will also be set
audio	Audio	Optional. Message is an audio file, information about the file
document	Document	Optional. Message is a general file, information about the file
photo	Array of PhotoSize	Optional. Message is a photo, available sizes of the photo
sticker	Sticker	Optional. Message is a sticker, information about the sticker
story	Story	Optional. Message is a forwarded story
video	Video	Optional. Message is a video, information about the video
video_note	VideoNote	Optional. Message is a video note, information about the video message
voice	Voice	Optional. Message is a voice message, information about the file
caption	String	Optional. Caption for the animation, audio, document, photo, video or voice
caption_entities	Array of MessageEntity	Optional. For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption
has_media_spoiler	True	Optional. True, if the message media is covered by a spoiler animation
contact	Contact	Optional. Message is a shared contact, information about the contact
dice	Dice	Optional. Message is a dice with random value
game	Game	Optional. Message is a game, information about the game. More about games »
poll	Poll	Optional. Message is a native poll, information about the poll
venue	Venue	Optional. Message is a venue, information about the venue. For backward compatibility, when this field is set, the location field will also be set
location	Location	Optional. Message is a shared location, information about the location
new_chat_members	Array of User	Optional. New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)
left_chat_member	User	Optional. A member was removed from the group, information about them (this member may be the bot itself)
new_chat_title	String	Optional. A chat title was changed to this value
new_chat_photo	Array of PhotoSize	Optional. A chat photo was change to this value
delete_chat_photo	True	Optional. Service message: the chat photo was deleted
group_chat_created	True	Optional. Service message: the group has been created
supergroup_chat_created	True	Optional. Service message: the supergroup has been created. This field can't be received in a message coming through updates, because bot can't be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.
channel_chat_created	True	Optional. Service message: the channel has been created. This field can't be received in a message coming through updates, because bot can't be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.
message_auto_delete_timer_changed	MessageAutoDeleteTimerChanged	Optional. Service message: auto-delete timer settings changed in the chat
migrate_to_chat_id	Integer	Optional. The group has been migrated to a supergroup with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.
migrate_from_chat_id	Integer	Optional. The supergroup has been migrated from a group with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.
pinned_message	MaybeInaccessibleMessage	Optional. Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.
invoice	Invoice	Optional. Message is an invoice for a payment, information about the invoice. More about payments »
successful_payment	SuccessfulPayment	Optional. Message is a service message about a successful payment, information about the payment. More about payments »
users_shared	UsersShared	Optional. Service message: users were shared with the bot
chat_shared	ChatShared	Optional. Service message: a chat was shared with the bot
connected_website	String	Optional. The domain name of the website on which the user has logged in. More about Telegram Login »
write_access_allowed	WriteAccessAllowed	Optional. Service message: the user allowed the bot to write messages after adding it to the attachment or side menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method requestWriteAccess
passport_data	PassportData	Optional. Telegram Passport data
proximity_alert_triggered	ProximityAlertTriggered	Optional. Service message. A user in the chat triggered another user's proximity alert while sharing Live Location.
boost_added	ChatBoostAdded	Optional. Service message: user boosted the chat
forum_topic_created	ForumTopicCreated	Optional. Service message: forum topic created
forum_topic_edited	ForumTopicEdited	Optional. Service message: forum topic edited
forum_topic_closed	ForumTopicClosed	Optional. Service message: forum topic closed
forum_topic_reopened	ForumTopicReopened	Optional. Service message: forum topic reopened
general_forum_topic_hidden	GeneralForumTopicHidden	Optional. Service message: the 'General' forum topic hidden
general_forum_topic_unhidden	GeneralForumTopicUnhidden	Optional. Service message: the 'General' forum topic unhidden
giveaway_created	GiveawayCreated	Optional. Service message: a scheduled giveaway was created
giveaway	Giveaway	Optional. The message is a scheduled giveaway message
giveaway_winners	GiveawayWinners	Optional. A giveaway with public winners was completed
giveaway_completed	GiveawayCompleted	Optional. Service message: a giveaway without public winners was completed
video_chat_scheduled	VideoChatScheduled	Optional. Service message: video chat scheduled
video_chat_started	VideoChatStarted	Optional. Service message: video chat started
video_chat_ended	VideoChatEnded	Optional. Service message: video chat ended
video_chat_participants_invited	VideoChatParticipantsInvited	Optional. Service message: new participants invited to a video chat
web_app_data	WebAppData	Optional. Service message: data sent by a Web App
reply_markup	InlineKeyboardMarkup	Optional. Inline keyboard attached to the message. login_url buttons are represented as ordinary url buttons.
MessageId
This object represents a unique message identifier.

Field	Type	Description
message_id	Integer	Unique message identifier
InaccessibleMessage
This object describes a message that was deleted or is otherwise inaccessible to the bot.

Field	Type	Description
chat	Chat	Chat the message belonged to
message_id	Integer	Unique message identifier inside the chat
date	Integer	Always 0. The field can be used to differentiate regular and inaccessible messages.
MaybeInaccessibleMessage
This object describes a message that can be inaccessible to the bot. It can be one of

- [Message]
- [InaccessibleMessage]
MessageEntity
This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.

Field	Type	Description
type	String	Type of the entity. Currently, can be “mention” (@username), “hashtag” (#hashtag), “cashtag” ($USD), “bot_command” (/start@jobs_bot), “url” (https://telegram.org), “email” (do-not-reply@telegram.org), “phone_number” (+1-212-555-0123), “bold” (bold text), “italic” (italic text), “underline” (underlined text), “strikethrough” (strikethrough text), “spoiler” (spoiler message), “blockquote” (block quotation), “code” (monowidth string), “pre” (monowidth block), “text_link” (for clickable text URLs), “text_mention” (for users without usernames), “custom_emoji” (for inline custom emoji stickers)
offset	Integer	Offset in UTF-16 code units to the start of the entity
length	Integer	Length of the entity in UTF-16 code units
url	String	Optional. For “text_link” only, URL that will be opened after user taps on the text
user	User	Optional. For “text_mention” only, the mentioned user
language	String	Optional. For “pre” only, the programming language of the entity text
custom_emoji_id	String	Optional. For “custom_emoji” only, unique identifier of the custom emoji. Use getCustomEmojiStickers to get full information about the sticker
TextQuote
This object contains information about the quoted part of a message that is replied to by the given message.

Field	Type	Description
text	String	Text of the quoted part of a message that is replied to by the given message
entities	Array of MessageEntity	Optional. Special entities that appear in the quote. Currently, only bold, italic, underline, strikethrough, spoiler, and custom_emoji entities are kept in quotes.
position	Integer	Approximate quote position in the original message in UTF-16 code units as specified by the sender
is_manual	True	Optional. True, if the quote was chosen manually by the message sender. Otherwise, the quote was added automatically by the server.
ExternalReplyInfo
This object contains information about a message that is being replied to, which may come from another chat or forum topic.

Field	Type	Description
origin	MessageOrigin	Origin of the message replied to by the given message
chat	Chat	Optional. Chat the original message belongs to. Available only if the chat is a supergroup or a channel.
message_id	Integer	Optional. Unique message identifier inside the original chat. Available only if the original chat is a supergroup or a channel.
link_preview_options	LinkPreviewOptions	Optional. Options used for link preview generation for the original message, if it is a text message
animation	Animation	Optional. Message is an animation, information about the animation
audio	Audio	Optional. Message is an audio file, information about the file
document	Document	Optional. Message is a general file, information about the file
photo	Array of PhotoSize	Optional. Message is a photo, available sizes of the photo
sticker	Sticker	Optional. Message is a sticker, information about the sticker
story	Story	Optional. Message is a forwarded story
video	Video	Optional. Message is a video, information about the video
video_note	VideoNote	Optional. Message is a video note, information about the video message
voice	Voice	Optional. Message is a voice message, information about the file
has_media_spoiler	True	Optional. True, if the message media is covered by a spoiler animation
contact	Contact	Optional. Message is a shared contact, information about the contact
dice	Dice	Optional. Message is a dice with random value
game	Game	Optional. Message is a game, information about the game. More about games »
giveaway	Giveaway	Optional. Message is a scheduled giveaway, information about the giveaway
giveaway_winners	GiveawayWinners	Optional. A giveaway with public winners was completed
invoice	Invoice	Optional. Message is an invoice for a payment, information about the invoice. More about payments »
location	Location	Optional. Message is a shared location, information about the location
poll	Poll	Optional. Message is a native poll, information about the poll
venue	Venue	Optional. Message is a venue, information about the venue
ReplyParameters
Describes reply parameters for the message that is being sent.

Field	Type	Description
message_id	Integer	Identifier of the message that will be replied to in the current chat, or in the chat chat_id if it is specified
chat_id	Integer or String	Optional. If the message to be replied to is from a different chat, unique identifier for the chat or username of the channel (in the format @channelusername)
allow_sending_without_reply	Boolean	Optional. Pass True if the message should be sent even if the specified message to be replied to is not found; can be used only for replies in the same chat and forum topic.
quote	String	Optional. Quoted part of the message to be replied to; 0-1024 characters after entities parsing. The quote must be an exact substring of the message to be replied to, including bold, italic, underline, strikethrough, spoiler, and custom_emoji entities. The message will fail to send if the quote isn't found in the original message.
quote_parse_mode	String	Optional. Mode for parsing entities in the quote. See formatting options for more details.
quote_entities	Array of MessageEntity	Optional. A JSON-serialized list of special entities that appear in the quote. It can be specified instead of quote_parse_mode.
quote_position	Integer	Optional. Position of the quote in the original message in UTF-16 code units
MessageOrigin
This object describes the origin of a message. It can be one of

- MessageOriginUser
- MessageOriginHiddenUser
- MessageOriginChat
- MessageOriginChannel
MessageOriginUser
The message was originally sent by a known user.

Field	Type	Description
type	String	Type of the message origin, always “user”
date	Integer	Date the message was sent originally in Unix time
sender_user	User	User that sent the message originally
MessageOriginHiddenUser
The message was originally sent by an unknown user.

Field	Type	Description
type	String	Type of the message origin, always “hidden_user”
date	Integer	Date the message was sent originally in Unix time
sender_user_name	String	Name of the user that sent the message originally
MessageOriginChat
The message was originally sent on behalf of a chat to a group chat.

Field	Type	Description
type	String	Type of the message origin, always “chat”
date	Integer	Date the message was sent originally in Unix time
sender_chat	Chat	Chat that sent the message originally
author_signature	String	Optional. For messages originally sent by an anonymous chat administrator, original message author signature
MessageOriginChannel
The message was originally sent to a channel chat.

Field	Type	Description
type	String	Type of the message origin, always “channel”
date	Integer	Date the message was sent originally in Unix time
chat	Chat	Channel chat to which the message was originally sent
message_id	Integer	Unique message identifier inside the chat
author_signature	String	Optional. Signature of the original post author
PhotoSize
This object represents one size of a photo or a file / sticker thumbnail.

Field	Type	Description
file_id	String	Identifier for this file, which can be used to download or reuse the file
file_unique_id	String	Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
width	Integer	Photo width
height	Integer	Photo height
file_size	Integer	Optional. File size in bytes
Animation
This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).

Field	Type	Description
file_id	String	Identifier for this file, which can be used to download or reuse the file
file_unique_id	String	Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
width	Integer	Video width as defined by sender
height	Integer	Video height as defined by sender
duration	Integer	Duration of the video in seconds as defined by sender
thumbnail	PhotoSize	Optional. Animation thumbnail as defined by sender
file_name	String	Optional. Original animation filename as defined by sender
mime_type	String	Optional. MIME type of the file as defined by sender
file_size	Integer	Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.
Audio
This object represents an audio file to be treated as music by the Telegram clients.

Field	Type	Description
file_id	String	Identifier for this file, which can be used to download or reuse the file
file_unique_id	String	Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
duration	Integer	Duration of the audio in seconds as defined by sender
performer	String	Optional. Performer of the audio as defined by sender or by audio tags
title	String	Optional. Title of the audio as defined by sender or by audio tags
file_name	String	Optional. Original filename as defined by sender
mime_type	String	Optional. MIME type of the file as defined by sender
file_size	Integer	Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.
thumbnail	PhotoSize	Optional. Thumbnail of the album cover to which the music file belongs
Document
This object represents a general file (as opposed to photos, voice messages and audio files).

Field	Type	Description
file_id	String	Identifier for this file, which can be used to download or reuse the file
file_unique_id	String	Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
thumbnail	PhotoSize	Optional. Document thumbnail as defined by sender
file_name	String	Optional. Original filename as defined by sender
mime_type	String	Optional. MIME type of the file as defined by sender
file_size	Integer	Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.
Story
This object represents a story.

Field	Type	Description
chat	Chat	Chat that posted the story
id	Integer	Unique identifier for the story in the chat
Video
This object represents a video file.

Field	Type	Description
file_id	String	Identifier for this file, which can be used to download or reuse the file
file_unique_id	String	Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
width	Integer	Video width as defined by sender
height	Integer	Video height as defined by sender
duration	Integer	Duration of the video in seconds as defined by sender
thumbnail	PhotoSize	Optional. Video thumbnail
file_name	String	Optional. Original filename as defined by sender
mime_type	String	Optional. MIME type of the file as defined by sender
file_size	Integer	Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.
VideoNote
This object represents a video message (available in Telegram apps as of v.4.0).

Field	Type	Description
file_id	String	Identifier for this file, which can be used to download or reuse the file
file_unique_id	String	Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
length	Integer	Video width and height (diameter of the video message) as defined by sender
duration	Integer	Duration of the video in seconds as defined by sender
thumbnail	PhotoSize	Optional. Video thumbnail
file_size	Integer	Optional. File size in bytes
Voice
This object represents a voice note.

Field	Type	Description
file_id	String	Identifier for this file, which can be used to download or reuse the file
file_unique_id	String	Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
duration	Integer	Duration of the audio in seconds as defined by sender
mime_type	String	Optional. MIME type of the file as defined by sender
file_size	Integer	Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.
Contact
This object represents a phone contact.

Field	Type	Description
phone_number	String	Contact's phone number
first_name	String	Contact's first name
last_name	String	Optional. Contact's last name
user_id	Integer	Optional. Contact's user identifier in Telegram. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.
vcard	String	Optional. Additional data about the contact in the form of a vCard
Dice
This object represents an animated emoji that displays a random value.

Field	Type	Description
emoji	String	Emoji on which the dice throw animation is based
value	Integer	Value of the dice, 1-6 for “🎲”, “🎯” and “🎳” base emoji, 1-5 for “🏀” and “⚽” base emoji, 1-64 for “🎰” base emoji
PollOption
This object contains information about one answer option in a poll.

Field	Type	Description
text	String	Option text, 1-100 characters
voter_count	Integer	Number of users that voted for this option
PollAnswer
This object represents an answer of a user in a non-anonymous poll.

Field	Type	Description
poll_id	String	Unique poll identifier
voter_chat	Chat	Optional. The chat that changed the answer to the poll, if the voter is anonymous
user	User	Optional. The user that changed the answer to the poll, if the voter isn't anonymous
option_ids	Array of Integer	0-based identifiers of chosen answer options. May be empty if the vote was retracted.
Poll
This object contains information about a poll.

Field	Type	Description
id	String	Unique poll identifier
question	String	Poll question, 1-300 characters
options	Array of PollOption	List of poll options
total_voter_count	Integer	Total number of users that voted in the poll
is_closed	Boolean	True, if the poll is closed
is_anonymous	Boolean	True, if the poll is anonymous
type	String	Poll type, currently can be “regular” or “quiz”
allows_multiple_answers	Boolean	True, if the poll allows multiple answers
correct_option_id	Integer	Optional. 0-based identifier of the correct answer option. Available only for polls in the quiz mode, which are closed, or was sent (not forwarded) by the bot or to the private chat with the bot.
explanation	String	Optional. Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters
explanation_entities	Array of MessageEntity	Optional. Special entities like usernames, URLs, bot commands, etc. that appear in the explanation
open_period	Integer	Optional. Amount of time in seconds the poll will be active after creation
close_date	Integer	Optional. Point in time (Unix timestamp) when the poll will be automatically closed
Location
This object represents a point on the map.

Field	Type	Description
latitude	Float	Latitude as defined by sender
longitude	Float	Longitude as defined by sender
horizontal_accuracy	Float	Optional. The radius of uncertainty for the location, measured in meters; 0-1500
live_period	Integer	Optional. Time relative to the message sending date, during which the location can be updated; in seconds. For active live locations only.
heading	Integer	Optional. The direction in which user is moving, in degrees; 1-360. For active live locations only.
proximity_alert_radius	Integer	Optional. The maximum distance for proximity alerts about approaching another chat member, in meters. For sent live locations only.
Venue
This object represents a venue.

Field	Type	Description
location	Location	Venue location. Can't be a live location
title	String	Name of the venue
address	String	Address of the venue
foursquare_id	String	Optional. Foursquare identifier of the venue
foursquare_type	String	Optional. Foursquare type of the venue. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)
google_place_id	String	Optional. Google Places identifier of the venue
google_place_type	String	Optional. Google Places type of the venue. (See supported types.)
WebAppData
Describes data sent from a Web App to the bot.

Field	Type	Description
data	String	The data. Be aware that a bad client can send arbitrary data in this field.
button_text	String	Text of the web_app keyboard button from which the Web App was opened. Be aware that a bad client can send arbitrary data in this field.
ProximityAlertTriggered
This object represents the content of a service message, sent whenever a user in the chat triggers a proximity alert set by another user.

Field	Type	Description
traveler	User	User that triggered the alert
watcher	User	User that set the alert
distance	Integer	The distance between the users
MessageAutoDeleteTimerChanged
This object represents a service message about a change in auto-delete timer settings.

Field	Type	Description
message_auto_delete_time	Integer	New auto-delete time for messages in the chat; in seconds
ChatBoostAdded
This object represents a service message about a user boosting a chat.

Field	Type	Description
boost_count	Integer	Number of boosts added by the user
ForumTopicCreated
This object represents a service message about a new forum topic created in the chat.

Field	Type	Description
name	String	Name of the topic
icon_color	Integer	Color of the topic icon in RGB format
icon_custom_emoji_id	String	Optional. Unique identifier of the custom emoji shown as the topic icon
ForumTopicClosed
This object represents a service message about a forum topic closed in the chat. Currently holds no information.

ForumTopicEdited
This object represents a service message about an edited forum topic.

Field	Type	Description
name	String	Optional. New name of the topic, if it was edited
icon_custom_emoji_id	String	Optional. New identifier of the custom emoji shown as the topic icon, if it was edited; an empty string if the icon was removed
ForumTopicReopened
This object represents a service message about a forum topic reopened in the chat. Currently holds no information.

GeneralForumTopicHidden
This object represents a service message about General forum topic hidden in the chat. Currently holds no information.

GeneralForumTopicUnhidden
This object represents a service message about General forum topic unhidden in the chat. Currently holds no information.

UsersShared
This object contains information about the users whose identifiers were shared with the bot using a KeyboardButtonRequestUsers button.

Field	Type	Description
request_id	Integer	Identifier of the request
user_ids	Array of Integer	Identifiers of the shared users. These numbers may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting them. But they have at most 52 significant bits, so 64-bit integers or double-precision float types are safe for storing these identifiers. The bot may not have access to the users and could be unable to use these identifiers, unless the users are already known to the bot by some other means.
ChatShared
This object contains information about the chat whose identifier was shared with the bot using a KeyboardButtonRequestChat button.

Field	Type	Description
request_id	Integer	Identifier of the request
chat_id	Integer	Identifier of the shared chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier. The bot may not have access to the chat and could be unable to use this identifier, unless the chat is already known to the bot by some other means.
WriteAccessAllowed
This object represents a service message about a user allowing a bot to write messages after adding it to the attachment menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method requestWriteAccess.

Field	Type	Description
from_request	Boolean	Optional. True, if the access was granted after the user accepted an explicit request from a Web App sent by the method requestWriteAccess
web_app_name	String	Optional. Name of the Web App, if the access was granted when the Web App was launched from a link
from_attachment_menu	Boolean	Optional. True, if the access was granted when the bot was added to the attachment or side menu
VideoChatScheduled
This object represents a service message about a video chat scheduled in the chat.

Field	Type	Description
start_date	Integer	Point in time (Unix timestamp) when the video chat is supposed to be started by a chat administrator
VideoChatStarted
This object represents a service message about a video chat started in the chat. Currently holds no information.

VideoChatEnded
This object represents a service message about a video chat ended in the chat.

Field	Type	Description
duration	Integer	Video chat duration in seconds
VideoChatParticipantsInvited
This object represents a service message about new members invited to a video chat.

Field	Type	Description
users	Array of User	New members that were invited to the video chat
Giveaway
This object represents a message about a scheduled giveaway.

Field	Type	Description
chats	Array of Chat	The list of chats which the user must join to participate in the giveaway
winners_selection_date	Integer	Point in time (Unix timestamp) when winners of the giveaway will be selected
winner_count	Integer	The number of users which are supposed to be selected as winners of the giveaway
only_new_members	True	Optional. True, if only users who join the chats after the giveaway started should be eligible to win
has_public_winners	True	Optional. True, if the list of giveaway winners will be visible to everyone
prize_description	String	Optional. Description of additional giveaway prize
country_codes	Array of String	Optional. A list of two-letter ISO 3166-1 alpha-2 country codes indicating the countries from which eligible users for the giveaway must come. If empty, then all users can participate in the giveaway. Users with a phone number that was bought on Fragment can always participate in giveaways.
premium_subscription_month_count	Integer	Optional. The number of months the Telegram Premium subscription won from the giveaway will be active for
GiveawayCreated
This object represents a service message about the creation of a scheduled giveaway. Currently holds no information.
GiveawayWinners
This object represents a message about the completion of a giveaway with public winners.

Field	Type	Description
chat	Chat	The chat that created the giveaway
giveaway_message_id	Integer	Identifier of the message with the giveaway in the chat
winners_selection_date	Integer	Point in time (Unix timestamp) when winners of the giveaway were selected
winner_count	Integer	Total number of winners in the giveaway
winners	Array of User	List of up to 100 winners of the giveaway
additional_chat_count	Integer	Optional. The number of other chats the user had to join in order to be eligible for the giveaway
premium_subscription_month_count	Integer	Optional. The number of months the Telegram Premium subscription won from the giveaway will be active for
unclaimed_prize_count	Integer	Optional. Number of undistributed prizes
only_new_members	True	Optional. True, if only users who had joined the chats after the giveaway started were eligible to win
was_refunded	True	Optional. True, if the giveaway was canceled because the payment for it was refunded
prize_description	String	Optional. Description of additional giveaway prize
GiveawayCompleted
This object represents a service message about the completion of a giveaway without public winners.

Field	Type	Description
winner_count	Integer	Number of winners in the giveaway
unclaimed_prize_count	Integer	Optional. Number of undistributed prizes
giveaway_message	Message	Optional. Message with the giveaway that was completed, if it wasn't deleted
LinkPreviewOptions
Describes the options used for link preview generation.

Field	Type	Description
is_disabled	Boolean	Optional. True, if the link preview is disabled
url	String	Optional. URL to use for the link preview. If empty, then the first URL found in the message text will be used
prefer_small_media	Boolean	Optional. True, if the media in the link preview is supposed to be shrunk; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview
prefer_large_media	Boolean	Optional. True, if the media in the link preview is supposed to be enlarged; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview
show_above_text	Boolean	Optional. True, if the link preview must be shown above the message text; otherwise, the link preview will be shown below the message text
UserProfilePhotos
This object represent a user's profile pictures.

Field	Type	Description
total_count	Integer	Total number of profile pictures the target user has
photos	Array of Array of PhotoSize	Requested profile pictures (in up to 4 sizes each)
File
This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile.

> The maximum file size to download is 20 MB

Field	Type	Description
file_id	String	Identifier for this file, which can be used to download or reuse the file
file_unique_id	String	Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
file_size	Integer	Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.
file_path	String	Optional. File path. Use https://api.telegram.org/file/bot<token>/<file_path> to get the file.
WebAppInfo
Describes a Web App.

Field	Type	Description
url	String	An HTTPS URL of a Web App to be opened with additional data as specified in Initializing Web Apps
ReplyKeyboardMarkup
This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).

Field	Type	Description
keyboard	Array of Array of KeyboardButton	Array of button rows, each represented by an Array of KeyboardButton objects
is_persistent	Boolean	Optional. Requests clients to always show the keyboard when the regular keyboard is hidden. Defaults to false, in which case the custom keyboard can be hidden and opened with a keyboard icon.
resize_keyboard	Boolean	Optional. Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to false, in which case the custom keyboard is always of the same height as the app's standard keyboard.
one_time_keyboard	Boolean	Optional. Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat - the user can press a special button in the input field to see the custom keyboard again. Defaults to false.
input_field_placeholder	String	Optional. The placeholder to be shown in the input field when the keyboard is active; 1-64 characters
selective	Boolean	Optional. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.

Example: A user requests to change the bot's language, bot replies to the request with a keyboard to select the new language. Other users in the group don't see the keyboard.
KeyboardButton
This object represents one button of the reply keyboard. For simple text buttons, String can be used instead of this object to specify the button text. The optional fields web_app, request_users, request_chat, request_contact, request_location, and request_poll are mutually exclusive.

Field	Type	Description
text	String	Text of the button. If none of the optional fields are used, it will be sent as a message when the button is pressed
request_users	KeyboardButtonRequestUsers	Optional. If specified, pressing the button will open a list of suitable users. Identifiers of selected users will be sent to the bot in a “users_shared” service message. Available in private chats only.
request_chat	KeyboardButtonRequestChat	Optional. If specified, pressing the button will open a list of suitable chats. Tapping on a chat will send its identifier to the bot in a “chat_shared” service message. Available in private chats only.
request_contact	Boolean	Optional. If True, the user's phone number will be sent as a contact when the button is pressed. Available in private chats only.
request_location	Boolean	Optional. If True, the user's current location will be sent when the button is pressed. Available in private chats only.
request_poll	KeyboardButtonPollType	Optional. If specified, the user will be asked to create a poll and send it to the bot when the button is pressed. Available in private chats only.
web_app	WebAppInfo	Optional. If specified, the described Web App will be launched when the button is pressed. The Web App will be able to send a “web_app_data” service message. Available in private chats only.
Note: request_users and request_chat options will only work in Telegram versions released after 3 February, 2023. Older clients will display unsupported message.

KeyboardButtonRequestUsers
This object defines the criteria used to request suitable users. The identifiers of the selected users will be shared with the bot when the corresponding button is pressed. More about requesting users »

Field	Type	Description
request_id	Integer	Signed 32-bit identifier of the request that will be received back in the UsersShared object. Must be unique within the message
user_is_bot	Boolean	Optional. Pass True to request bots, pass False to request regular users. If not specified, no additional restrictions are applied.
user_is_premium	Boolean	Optional. Pass True to request premium users, pass False to request non-premium users. If not specified, no additional restrictions are applied.
max_quantity	Integer	Optional. The maximum number of users to be selected; 1-10. Defaults to 1.
KeyboardButtonRequestChat
This object defines the criteria used to request a suitable chat. The identifier of the selected chat will be shared with the bot when the corresponding button is pressed. More about requesting chats »

Field	Type	Description
request_id	Integer	Signed 32-bit identifier of the request, which will be received back in the ChatShared object. Must be unique within the message
chat_is_channel	Boolean	Pass True to request a channel chat, pass False to request a group or a supergroup chat.
chat_is_forum	Boolean	Optional. Pass True to request a forum supergroup, pass False to request a non-forum chat. If not specified, no additional restrictions are applied.
chat_has_username	Boolean	Optional. Pass True to request a supergroup or a channel with a username, pass False to request a chat without a username. If not specified, no additional restrictions are applied.
chat_is_created	Boolean	Optional. Pass True to request a chat owned by the user. Otherwise, no additional restrictions are applied.
user_administrator_rights	ChatAdministratorRights	Optional. A JSON-serialized object listing the required administrator rights of the user in the chat. The rights must be a superset of bot_administrator_rights. If not specified, no additional restrictions are applied.
bot_administrator_rights	ChatAdministratorRights	Optional. A JSON-serialized object listing the required administrator rights of the bot in the chat. The rights must be a subset of user_administrator_rights. If not specified, no additional restrictions are applied.
bot_is_member	Boolean	Optional. Pass True to request a chat with the bot as a member. Otherwise, no additional restrictions are applied.
KeyboardButtonPollType
This object represents type of a poll, which is allowed to be created and sent when the corresponding button is pressed.

Field	Type	Description
type	String	Optional. If quiz is passed, the user will be allowed to create only polls in the quiz mode. If regular is passed, only regular polls will be allowed. Otherwise, the user will be allowed to create a poll of any type.
ReplyKeyboardRemove
Upon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).

Field	Type	Description
remove_keyboard	True	Requests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use one_time_keyboard in ReplyKeyboardMarkup)
selective	Boolean	Optional. Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.

Example: A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet.
InlineKeyboardMarkup
This object represents an inline keyboard that appears right next to the message it belongs to.

Field	Type	Description
inline_keyboard	Array of Array of InlineKeyboardButton	Array of button rows, each represented by an Array of InlineKeyboardButton objects
InlineKeyboardButton
This object represents one button of an inline keyboard. You must use exactly one of the optional fields.

Field	Type	Description
text	String	Label text on the button
url	String	Optional. HTTP or tg:// URL to be opened when the button is pressed. Links tg://user?id=<user_id> can be used to mention a user by their identifier without using a username, if this is allowed by their privacy settings.
callback_data	String	Optional. Data to be sent in a callback query to the bot when button is pressed, 1-64 bytes
web_app	WebAppInfo	Optional. Description of the Web App that will be launched when the user presses the button. The Web App will be able to send an arbitrary message on behalf of the user using the method answerWebAppQuery. Available only in private chats between a user and the bot.
login_url	LoginUrl	Optional. An HTTPS URL used to automatically authorize the user. Can be used as a replacement for the Telegram Login Widget.
switch_inline_query	String	Optional. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot's username and the specified inline query in the input field. May be empty, in which case just the bot's username will be inserted.
switch_inline_query_current_chat	String	Optional. If set, pressing the button will insert the bot's username and the specified inline query in the current chat's input field. May be empty, in which case only the bot's username will be inserted.

This offers a quick way for the user to open your bot in inline mode in the same chat - good for selecting something from multiple options.
switch_inline_query_chosen_chat	SwitchInlineQueryChosenChat	Optional. If set, pressing the button will prompt the user to select one of their chats of the specified type, open that chat and insert the bot's username and the specified inline query in the input field
callback_game	CallbackGame	Optional. Description of the game that will be launched when the user presses the button.

NOTE: This type of button must always be the first button in the first row.
pay	Boolean	Optional. Specify True, to send a Pay button.

NOTE: This type of button must always be the first button in the first row and can only be used in invoice messages.
LoginUrl
This object represents a parameter of the inline keyboard button used to automatically authorize a user. Serves as a great replacement for the Telegram Login Widget when the user is coming from Telegram. All the user needs to do is tap/click a button and confirm that they want to log in:

TITLE
Telegram apps support these buttons as of version 5.7.

Sample bot: @discussbot

Field	Type	Description
url	String	An HTTPS URL to be opened with user authorization data added to the query string when the button is pressed. If the user refuses to provide authorization data, the original URL without information about the user will be opened. The data added is the same as described in Receiving authorization data. NOTE: You must always check the hash of the received data to verify the authentication and the integrity of the data as described in Checking authorization.
forward_text	String	Optional. New text of the button in forwarded messages.
bot_username	String	Optional. Username of a bot, which will be used for user authorization. See Setting up a bot for more details. If not specified, the current bot's username will be assumed. The url's domain must be the same as the domain linked with the bot. See Linking your domain to the bot for more details.
request_write_access	Boolean	Optional. Pass True to request the permission for your bot to send messages to the user.
